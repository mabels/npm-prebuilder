"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var GeoMapDirectionServiceHere = /** @class */ (function () {
    function GeoMapDirectionServiceHere(init) {
        this.lines = [];
        this.platform = init.platform;
        this.api = init.api;
        this.mapImplementation = init.map;
    }
    GeoMapDirectionServiceHere.create = function (init) {
        return new GeoMapDirectionServiceHere(init);
    };
    GeoMapDirectionServiceHere.prototype.paintRoute = function (from, to) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        var directionsService = _this.platform.getRoutingService();
                        var config = {
                            mode: 'fastest;car',
                            waypoint0: "geo!" + from.lat + "," + from.lng,
                            waypoint1: "geo!" + to.lat + "," + to.lng,
                            representation: 'display',
                            routingParameters: 'display'
                        };
                        directionsService.calculateRoute(config, function (result) {
                            if (!result.response || !result.response.route) {
                                return reject(new Error('No response'));
                            }
                            var route = result.response.route[0];
                            var path = route.shape.reduce(function (p, point) { return p.concat(point.split(',').map(function (c) { return parseFloat(c); }), [
                                undefined
                            ]); }, []);
                            var lineBackground = new H.map.Polyline(new H.geo.LineString(path), {
                                style: {
                                    lineWidth: 6,
                                    strokeColor: 'rgb(255, 255, 255)'
                                }
                            });
                            _this.lines.push(lineBackground);
                            var lineForegroud = new H.map.Polyline(new H.geo.LineString(path), {
                                style: {
                                    lineWidth: 4,
                                    strokeColor: 'rgb(44, 72, 161)'
                                }
                            });
                            _this.lines.push(lineForegroud);
                            _this.mapImplementation.map.addObject(lineBackground);
                            _this.mapImplementation.map.addObject(lineForegroud);
                            resolve({
                                start: {
                                    lat: route.waypoint[0].mappedPosition.latitude,
                                    lng: route.waypoint[0].mappedPosition.longitude
                                },
                                end: {
                                    lat: route.waypoint[1].mappedPosition.latitude,
                                    lng: route.waypoint[1].mappedPosition.longitude
                                }
                            });
                        }, function (error) {
                            reject(error);
                        });
                    })];
            });
        });
    };
    GeoMapDirectionServiceHere.prototype.clear = function () {
        return __awaiter(this, void 0, void 0, function () {
            var line;
            return __generator(this, function (_a) {
                while (this.lines.length) {
                    line = this.lines.pop();
                    this.mapImplementation.map.removeObject(line);
                }
                return [2 /*return*/];
            });
        });
    };
    return GeoMapDirectionServiceHere;
}());
exports.GeoMapDirectionServiceHere = GeoMapDirectionServiceHere;
//# sourceMappingURL=geo-map-direction-service-here.js.map