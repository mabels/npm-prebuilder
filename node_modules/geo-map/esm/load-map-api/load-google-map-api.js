import * as QueryString from 'query-string';
import * as Result from '../result';
import * as Types from '../types';
import * as uuid from 'uuid';
var GOOGLE_MAP_CALLBACK_ID = "g" + uuid
    .v4()
    .split('-')
    .join('');
var memoizedGoogleMapResult;
export function loadGoogleMapApi(result, config, context) {
    return new Promise(function (resolve) {
        // tslint:disable-next-line:no-any
        var win = context.window;
        var params = {
            callback: GOOGLE_MAP_CALLBACK_ID,
            language: config.language || 'en',
            region: config.region || null,
            libraries: 'places,geometry'
        };
        if (isAuthType(config.auth, Types.GoogleMapAuthType.ApiKey)) {
            params.key = config.auth.apiKey;
        }
        else if (isAuthType(config.auth, Types.GoogleMapAuthType.ClientId)) {
            params.client = config.auth.clientId;
            params.channel = config.auth.channel || null;
        }
        else {
            // tslint:disable-next-line:no-console
            console.warn("Could not configure Google Maps authentication.");
        }
        var url = "https://maps.googleapis.com/maps/api/js?" + QueryString.stringify(params);
        var previous = win.document.querySelector("[data-map-provider=" + Types.GeoMapProvider.Google + "]");
        if (previous && memoizedGoogleMapResult) {
            return resolve(memoizedGoogleMapResult);
        }
        memoizedGoogleMapResult = result;
        var script = win.document.createElement('script');
        script.src = url;
        script.setAttribute('data-map-provider', Types.GeoMapProvider.Google);
        win.document.body.appendChild(script);
        // tslint:disable-next-line:no-any
        win[GOOGLE_MAP_CALLBACK_ID] = function () {
            Result.toSuccess(result.result, context.init ? context.init() : win.google.maps);
            resolve(result);
        };
    });
}
function isAuthType(auth, type) {
    if (type === Types.GoogleMapAuthType.ApiKey) {
        return auth.hasOwnProperty('apiKey');
    }
    if (type === Types.GoogleMapAuthType.ClientId) {
        return auth.hasOwnProperty('clientId');
    }
    return false;
}
//# sourceMappingURL=load-google-map-api.js.map