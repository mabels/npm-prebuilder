// tslint:disable:no-any
import * as Types from '../types';
export function createResult() {
    return {
        type: Types.ResultType.Queued,
        startedAt: new Date()
    };
}
export function createSuccess(payload) {
    return {
        type: Types.ResultType.Success,
        payload: payload
    };
}
export var createFailure = function (error) {
    return {
        type: Types.ResultType.Failure,
        error: error
    };
};
export function from(data) {
    if (data.type === Types.ResultType.Failure) {
        return createFailure(data.error);
    }
    if (data.type === Types.ResultType.Success) {
        return createSuccess(data.payload);
    }
    return createResult();
}
export var toFailure = function (result, error) {
    var failure = result;
    delete failure.startedAt;
    delete failure.payload;
    failure.type = Types.ResultType.Failure;
    failure.error = error;
    return failure;
};
export var toSuccess = function (result, payload) {
    var success = result;
    delete success.startedAt;
    delete success.error;
    success.type = Types.ResultType.Success;
    success.payload = payload;
    return success;
};
export var toQueued = function (result) {
    var queued = result;
    delete queued.payload;
    delete queued.error;
    queued.type = Types.ResultType.Queued;
    queued.startedAt = new Date();
    return queued;
};
//# sourceMappingURL=result.js.map