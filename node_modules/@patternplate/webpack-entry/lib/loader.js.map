{"version":3,"sources":["../src/loader.js"],"names":["path","require","exists","globby","globParent","utils","requireFromString","debug","debuglog","resolveFrom","rawLoader","relative","process","cwd","__dirname","split","sep","join","module","exports","webpackEntry","cb","async","options","getOptions","getFiles","files","parent","entry","parentFull","rel","addContextDependency","Promise","all","map","file","full","getExported","fs","exported","mod","indexOf","push","ext","reg","result","entries","Array","isArray","e","input","parsed","parse","base","basename","extname","format","modulePath","code","String","readFileSync","Object","keys","err"],"mappings":"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","file":"loader.js","sourcesContent":["// const { entries } = require(\"lodash\");\nconst path = require(\"path\");\nconst exists = require(\"path-exists\");\nconst globby = require(\"globby\");\nconst globParent = require(\"glob-parent\");\nconst utils = require(\"loader-utils\");\nconst requireFromString = require(\"require-from-string\");\nconst debug = require(\"util\").debuglog(\"patternplate\");\nconst resolveFrom = require(\"resolve-from\");\n\nconst rawLoader = path.relative(process.cwd(), resolveFrom(__dirname, \"raw-loader\")).split(path.sep).join(\"/\");\n\nmodule.exports = async function webpackEntry() {\n  const cb = this.async();\n  const options = utils.getOptions(this);\n\n  const files = await getFiles(options)\n  const parent = globParent(options.entry);\n  const parentFull = path.join(options.cwd, parent);\n  const rel = path.relative(process.cwd(), parentFull);\n\n  this.addContextDependency(parentFull);\n\n  debug(\"webpack context\", parent, \"=>\", `./${rel}`);\n\n  const reg = await Promise.all(files.map(async file => {\n    const full = path.join(options.cwd, file);\n    const rel = path.relative(process.cwd(), full).split(path.sep).join('/');\n    const exported = await getExported(full, { fs: this.fs });\n\n    const mod = [`module.exports['${file}'] = require('./${rel}');`]\n\n    if (exported.indexOf(\"js\") === -1) {\n      mod.push(`module.exports['${file}'].js = function() { return require('./${rawLoader}!./${rel}'); };`);\n    }\n\n    if (exported.indexOf(\"css\") === -1 && await exists(ext('.css', full))) {\n      mod.push(`module.exports['${file}'].css = function() { return require('./${ext('.css', rel)}'); };`);\n    }\n\n    if (exported.indexOf(\"html\") === -1 && await exists(ext('.html', full))) {\n      mod.push(`module.exports['${file}'].html = function() { return require('./${ext('.html', rel)}'); };`);\n    }\n\n    return mod.join('\\n');\n  }));\n\n  const result = `\n    ${reg.join('\\n')}\n  `;\n\n  cb(null, result);\n};\n\nfunction getFiles(options) {\n  const entries = Array.isArray(options.entry) ? options.entry : [options.entry];\n  const cwd = options.cwd || process.cwd();\n  return globby(entries, { cwd });\n}\n\nfunction ext(e, ...input) {\n  const parsed = path.parse(path.join(...input));\n  parsed.base = `${path.basename(parsed.base, path.extname(parsed.base))}${e}`;\n  parsed.ext = e;\n  return path.format(parsed);\n}\n\nasync function getExported(modulePath, { fs }) {\n  const code = String(fs.readFileSync(modulePath));\n\n  try {\n    return Object.keys(requireFromString(code, modulePath));\n  } catch (err) {\n    return [];\n  }\n}\n"]}