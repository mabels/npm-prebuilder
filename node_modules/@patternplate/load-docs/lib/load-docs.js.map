{"version":3,"sources":["../src/load-docs.js"],"names":["path","require","frontmatter","globby","merge","remark","find","sander","shortid","DEFAULT_MANIFEST","version","flag","options","module","exports","loadDocs","loadDocsTree","docs","cwd","files","Promise","all","map","file","readFile","raw","contents","String","ast","parse","first","type","depth","front","attributes","manifest","b","basename","extname","toLowerCase","name","dirname","children","value","replace","generate","displayName","rawPath","join","id","split","sep","contentType","rawManifest"],"mappings":"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","file":"load-docs.js","sourcesContent":["const path = require(\"path\");\nconst frontmatter = require(\"front-matter\");\nconst globby = require(\"globby\");\nconst { merge } = require(\"lodash\");\nconst remark = require(\"remark\");\nconst find = require(\"unist-util-find\");\nconst sander = require(\"@marionebl/sander\");\nconst shortid = require(\"shortid\");\n\nconst DEFAULT_MANIFEST = {\n  version: \"1.0.0\",\n  flag: \"alpha\",\n  options: {}\n};\n\nmodule.exports = loadDocs;\nmodule.exports.loadDocsTree = loadDocsTree;\n\nasync function loadDocs(options) {\n  const files = await globby([...options.docs], {\n    cwd: options.cwd\n  });\n\n  return await Promise.all(\n    files.map(async file => {\n      const raw = await sander.readFile(options.cwd, file);\n      const contents = raw ? String(raw) : '';\n      const ast = remark().parse(contents);\n      const first = find(ast, { type: \"heading\", depth: 1 });\n\n      const front = frontmatter(contents).attributes;\n      const manifest = merge({}, DEFAULT_MANIFEST, front);\n\n      const b = path.basename(file, path.extname(file)).toLowerCase();\n      const name = b === \"readme\" ? path.dirname(file) : b;\n\n      manifest.name = manifest.name || (first ? (first.children[0].value || '').replace(/[^\\w]/g, '-') : (manifest.name || shortid.generate())).toLowerCase();\n      manifest.displayName = manifest.displayName || (first ? first.children[0].value : name);\n\n      const rawPath = path.join(path.dirname(file), path.basename(file, path.extname(file)));\n      const id = rawPath.split(path.sep).join(\"/\");\n\n      return {\n        id,\n        contents,\n        contentType: \"doc\",\n        path: file,\n        manifest,\n        rawManifest: front\n      };\n    })\n  );\n}\n\nasync function loadDocsTree(options) {\n  return {\n    id: \"root\",\n    children: await loadDocs(options),\n    type: \"root\"\n  };\n}\n"]}