{"version":3,"sources":["../../src/create/index.js"],"names":["path","require","ora","execa","createDefault","sander","MemoryFilesystem","importFrom","resolveFrom","resolvePkg","commandExists","module","exports","create","INSTALLERS","flags","pkg","out","error","resolved","self","dirname","__dirname","cwd","process","rel","relative","resolve","template","templateId","spinner","force","exists","Promise","all","map","i","catch","installer","filter","Boolean","install","join","start","rimraf","mkdir","data","name","basename","cliVersion","version","fs","target","dump","succeed","git","text","guide","console","log","message","err","Error","patternplate","base","files","list","file","writeFile","slice","readFileSync","readdirSync","reduce","acc","p","posix","stat","statSync","isFile","push","concat"],"mappings":"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","file":"index.js","sourcesContent":["const path = require(\"path\");\nconst ora = require(\"ora\");\nconst execa = require(\"execa\");\nconst createDefault = require(\"@patternplate/create-default\");\nconst sander = require(\"@marionebl/sander\");\nconst MemoryFilesystem = require(\"memory-fs\");\nconst importFrom = require(\"import-from\");\nconst resolveFrom = require(\"resolve-from\");\nconst resolvePkg = require(\"resolve-pkg\");\nconst commandExists = require(\"command-exists\");\n\nmodule.exports = create;\n\nconst INSTALLERS = [\"yarn\", \"npm\"];\n\nasync function create({flags, pkg}) {\n  if (typeof flags.out !== \"string\") {\n    throw error(\"create: --out flag is required\");\n  }\n\n  const resolved = resolvePkg(\"@patternplate/cli\")\n  const self = typeof resolved === \"string\" ? resolved : path.dirname(__dirname);\n  const cwd = flags.cwd || process.cwd();\n  const rel = path.relative(cwd, path.resolve(cwd, flags.out));\n\n  const template = typeof flags.template === \"string\"\n    ? importFrom(cwd, templateId)\n    : createDefault;\n\n  const spinner = ora(`Creating patternplate project at \"${rel}\"`);\n\n  if (typeof template !== \"function\") {\n    throw error(`create: template \"${templateId}\" is not a function.`);\n  }\n\n  if (!flags.force && await sander.exists(cwd, flags.out)) {\n    throw error(`create: target \"${flags.out}\" already exists at \"${rel}\", aborting.`);\n  }\n\n  const installer = (await Promise.all(INSTALLERS.map(i => {\n    return commandExists(i).catch(() => null);\n  }))).filter(Boolean)[0];\n\n  if (flags.install !== false) {\n    if (!installer) {\n      throw error(`No compatible installer found, one of the following must be installed: ${INSTALLERS.join(\", \")}`);\n    }\n  }\n\n  spinner.start();\n\n  if (flags.force && await sander.exists(cwd, flags.out)) {\n    await sander.rimraf(cwd, flags.out);\n  }\n\n  await sander.mkdir(cwd, flags.out);\n\n  const data = {\n    name: path.basename(flags.out),\n    cliVersion: pkg.version\n  };\n\n  const fs = template(data, new MemoryFilesystem());\n\n  const target = path.join(cwd, flags.out);\n  await dump(fs, \"/\", target);\n\n  spinner.succeed(`Created patternplate project at \"${rel}\"`);\n\n  if (flags.git !== false) {\n    await execa(\"git\", [\"init\"], {cwd: target});\n  }\n\n  if (flags.install !== false) {\n    spinner.text = `Installing dependencies via ${installer}`;\n    spinner.start();\n    await execa(\"npm\", [\"install\"], {cwd: target});\n    spinner.succeed(`Installed dependencies via ${installer}`);\n  }\n\n  if (flags.guide !== true) {\n    console.log(`\\nProceed via`);\n\n    console.log(`- cd ${rel}`);\n\n    if (flags.install === false) {\n      console.log(`- ${installer} install`);\n    }\n\n    console.log(`- ${installer} start`);\n  } else {\n    console.log(`Head back to https://git.io/vxeY1 for further instructions`);\n  }\n}\n\nfunction error(message) {\n  const err = new Error(message);\n  err.patternplate = true;\n  return err;\n}\n\nasync function dump(fs, base, target) {\n  const files = list(fs, base);\n  return Promise.all(files.map(async file => {\n    sander.writeFile(target, file.slice(1), fs.readFileSync(file));\n  }));\n}\n\nfunction list(fs, base) {\n  return fs.readdirSync(base)\n    .reduce((acc, name) => {\n      const p = (path.posix || path).join(base, name);\n      const stat = fs.statSync(p);\n      if (stat.isFile()) {\n        acc.push(p);\n      } else {\n        acc = acc.concat(list(fs, p));\n      }\n      return acc;\n    }, []);\n}\n"]}