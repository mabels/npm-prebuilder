{"version":3,"sources":["../../src/build/index.js"],"names":["path","require","url","eject","render","compiler","loadConfig","loadDocsTree","loadMeta","ora","sander","fromString","unindent","stringHash","module","exports","build","BUNDLE_PATH","COVER_PATH","RENDER_PATH","flags","cwd","process","out","length","Error","base","resolve","selectBase","rel","relative","upath","spinner","start","config","filepath","configCwd","dirname","entry","cover","docs","readme","patterns","errors","tree","id","children","map","error","message","join","schema","meta","state","isStatic","scripts","writeFile","JSON","stringify","pool","flatten","Promise","all","item","full","contentType","html","target","dump","bundle","bundleFs","getModule","fromFs","bundles","result","coverHtml","home","pattern","component","getComponent","demo","exists","copydir","to","succeed","split","charAt","filter","Boolean","then","c","reject","run","err","stats","compilation","forEach","console","outputFileSystem","content","payload","data","encodeURIComponent","head","css","before","after","options","prefix","fs","files","list","file","slice","readFileSync","readdirSync","reduce","acc","name","p","posix","stat","statSync","isFile","push","concat","components","fileId","artifact","sep","top","moduleId","source","filename","componentBundleSource","String","getExports","exportsCache","Map","hash","has","set","get","initial","Array","isArray"],"mappings":"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","file":"index.js","sourcesContent":["const path = require(\"path\");\nconst url = require(\"url\");\nconst eject = require(\"@patternplate/client/eject\");\nconst render = require(\"@patternplate/client/render\");\nconst compiler = require(\"@patternplate/compiler\");\nconst loadConfig = require(\"@patternplate/load-config\");\nconst { loadDocsTree } = require(\"@patternplate/load-docs\");\nconst loadMeta = require(\"@patternplate/load-meta\");\nconst ora = require(\"ora\");\nconst sander = require(\"@marionebl/sander\");\nconst fromString = require(\"require-from-string\");\nconst unindent = require(\"unindent\");\nconst stringHash = require(\"string-hash\");\n\nmodule.exports = build;\n\nconst BUNDLE_PATH = \"/patternplate.node.components.js\";\nconst COVER_PATH = \"/patternplate.node.cover.js\";\nconst RENDER_PATH = \"/patternplate.node.render.js\";\n\n// TODO: provide a lib version of this that\n// writes to a virtual fs / union fs\nasync function build({flags}) {\n  const cwd = flags.cwd || process.cwd();\n\n  if (typeof flags.out !== \"string\" || flags.out.length === 0) {\n    throw new Error(`expected --out to be non-empty string, received \"${flags.out}\" of type \"${typeof flags.out}\"`);\n  }\n\n  if (typeof flags.base !== \"string\" || flags.base.length === 0) {\n    throw new Error(`expected --base to be non-empty string, received \"${flags.base}\" of type \"${typeof flags.base}\"`);\n  }\n\n  const out = path.resolve(cwd, flags.out);\n  const base = selectBase(flags.base);\n  const rel = path.relative(cwd, out);\n  const upath = out.length >= rel ? rel : out;\n\n  const spinner = ora(`Building to \"${upath}\"`).start();\n\n  const { config, filepath } = await loadConfig({ cwd });\n  const configCwd = filepath ? path.dirname(filepath) : cwd;\n  const { entry = [], cover } = config;\n\n  const docs = await loadDocsTree({\n    cwd,\n    docs: config.docs,\n    readme: config.readme\n  });\n\n  const {patterns, errors} = await loadMeta({\n    cwd,\n    entry\n  });\n\n  const tree = {id: \"root\", children: patterns};\n\n  if (errors && errors.length > 0) {\n    throw new Error(errors.map(error => error.message).join(\"\\n\"));\n  }\n\n  const schema = { docs, meta: tree };\n  const state = { base, config, schema, isStatic: true, scripts: flags.scripts !== false };\n\n  // Create api/state.json\n  await sander.writeFile(out, 'api/state.json', JSON.stringify(schema));\n\n  // Create pages\n  const pool = [...flatten(docs.children), ...flatten(patterns)];\n\n  await Promise.all(pool.map(async item => {\n    const full = `${base}${item.contentType}/${item.id}`;\n    const html = await render(full, state);\n    const target = path.join(out, item.contentType, item.id, 'index.html');\n    await sander.writeFile(target, html);\n  }));\n\n  // Create required client js bundles\n  await dump(eject(), \"/static\", out);\n\n  // Create component bundles\n  await dump(await bundle({ cwd, config, target: \"web\" }), \"/\", path.join(out, 'api'));\n\n  const bundleFs = await bundle({ cwd, config, target: \"node\" });\n  const getModule = fromFs(bundleFs);\n  const bundles = getModule(BUNDLE_PATH);\n\n  // Create /\n  if (typeof cover === \"string\") {\n    const cover = getModule(COVER_PATH);\n    const result = typeof cover.render === \"function\"\n      ? cover.render(cover)\n      : getModule(RENDER_PATH)(cover);\n    await sander.writeFile(out, 'index.html', coverHtml(result, {base}));\n  } else {\n    const home = await render(base, state);\n    await sander.writeFile(out, 'index.html', home);\n  }\n\n  // Create demo.html files\n  await Promise.all(patterns.map(async pattern => {\n    const component = getComponent(bundles, pattern);\n    const result = typeof component.render === \"function\"\n      ? component.render(component)\n      : getModule(RENDER_PATH)(component);\n    await sander.writeFile(out, 'api/demo', `${pattern.id}.html`, demo(result, pattern));\n  }));\n\n  // Copy /static/\n  if (await sander.exists(configCwd, \"static\")) {\n    await sander.copydir(configCwd, \"static\").to(out, \"api/static\");\n  }\n  spinner.succeed(`Built to \"${upath}\"`);\n}\n\nfunction selectBase(base) {\n  base = base.split(/[\"']/g).join(\"\");\n\n  if (base === \"/\" || base === \"\") {\n    return base;\n  }\n\n  return [\n    base.charAt(0) === \"/\" ? \"\" : \"/\",\n    base,\n    base.charAt(base.length - 1) === \"/\" ? \"\" : \"/\"\n  ]\n  .filter(Boolean)\n  .join('');\n}\n\nfunction bundle({ cwd, config, target }) {\n  return compiler({ cwd, config, target })\n    .then(c => {\n      return new Promise((resolve, reject) => {\n        c.run((err, stats) => {\n          if (err) {\n            return reject(err);\n          }\n          if (stats.compilation.errors && stats.compilation.errors.length > 0) {\n            stats.compilation.errors.forEach(error => {\n              console.error(error);\n            });\n            return reject(stats.compilation.errors);\n          }\n          resolve(c.outputFileSystem);\n        })\n      });\n    });\n}\n\n// TODO: Duplicate of function in @patternplate/api/demo.js,\n// move to own package\nfunction demo(content, payload) {\n  const data = encodeURIComponent(JSON.stringify(payload));\n\n  return unindent(`\n    <!doctype html>\n    <html lang=\"en\">\n      <head>\n        <!-- content.head -->\n        ${content.head || \"\"}\n        <style>\n          /* content.css */\n          ${content.css || \"\"}\n        </style>\n      </head>\n      <body>\n        <textarea style=\"display: none;\" data-patternplate-vault=\"data-patternplate-vault\">${data}</textarea>\n        <!-- content.before -->\n        ${content.before || \"\"}\n        <!-- content.html -->\n        <div data-patternplate-mount=\"data-patternplate-mount\">${content.html || \"\"}</div>\n        <!-- content.after -->\n        ${content.after || \"\"}\n        <!-- ../ -> /api/ -->\n        <script src=\"../patternplate.web.components.js\"></script>\n        <script src=\"../patternplate.web.probe.js\"></script>\n        <script src=\"../patternplate.web.mount.js\"></script>\n        <script src=\"../patternplate.web.demo.js\"></script>\n      </body>\n    </html>\n`);\n}\n\nfunction coverHtml(content, options) {\n  const prefix = url.resolve(options.base, \"api\");\n\n  return unindent(`\n    <!doctype html>\n    <html lang=\"en\">\n      <head>\n        <!-- content.head -->\n        ${content.head || \"\"}\n        <style>\n          /* content.css */\n          ${content.css || \"\"}\n        </style>\n      </head>\n      <body>\n        <!-- content.before -->\n        ${content.before || \"\"}\n        <!-- content.html -->\n        <div data-patternplate-mount=\"data-patternplate-mount\">${content.html || \"\"}</div>\n        <!-- content.after -->\n        ${content.after || \"\"}\n        <script src=\"${prefix}/patternplate.web.probe.js\"></script>\n        <script src=\"${prefix}/patternplate.web.cover.js\"></script>\n        <script src=\"${prefix}/patternplate.web.mount.js\"></script>\n        <script src=\"${prefix}/patternplate.web.cover-client.js\"></script>\n      </body>\n    </html>\n  `);\n}\n\nasync function dump(fs, base, target) {\n  const files = list(fs, base);\n  return Promise.all(files.map(async file => {\n    sander.writeFile(target, file.slice(1), fs.readFileSync(file));\n  }));\n}\n\nfunction list(fs, base) {\n  return fs.readdirSync(base)\n    .reduce((acc, name) => {\n      const p = (path.posix || path).join(base, name);\n      const stat = fs.statSync(p);\n      if (stat.isFile()) {\n        acc.push(p);\n      } else {\n        acc = acc.concat(list(fs, p));\n      }\n      return acc;\n    }, []);\n}\n\n\n// TODO: Duplicate of function in @patternplate/api/demo.js,\n// move to own package\nfunction getComponent(components, data) {\n  const fileId = data.artifact.split(path.sep).join('/');\n  const top = components[fileId];\n\n  const moduleId = data.source.split(path.sep).join('/');\n  if (top[moduleId]) {\n    return top[moduleId];\n  }\n\n  return top;\n}\n\n// TODO: Duplicate of function in @patternplate/api/demo.js,\n// move to own package\nfunction fromFs(fs) {\n  return filename => {\n    const componentBundleSource = String(fs.readFileSync(filename));\n    return getExports(componentBundleSource, filename);\n  };\n}\n\n// TODO: Duplicate of function in @patternplate/api/demo.js,\n// move to own package\nconst exportsCache = new Map();\nfunction getExports(source, {filename}) {\n  const hash = stringHash(source);\n\n  if (!exportsCache.has(hash)) {\n    exportsCache.set(hash, fromString(source, filename));\n  }\n\n  return exportsCache.get(hash);\n}\n\n// TODO: Duplicate from @patternplate/client/selectors/pool\nfunction flatten(tree, initial = []) {\n  return tree.reduce((acc, item) => {\n    acc.push(item);\n    if (Array.isArray(item.children)) {\n      flatten(item.children, acc);\n    }\n    return acc;\n  }, initial);\n}\n"]}