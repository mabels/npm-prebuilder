{"version":3,"sources":["../../../src/app/actions/handle-dependent-actions.js"],"names":["handleDependentActions","partialReduce","deps","handlers","reduce","registry","entry","name","fn","state","action","actionHandlers","options","ok","Array","isArray","dependencies","handler","args","Object","keys","length","missing","filter","dependency","join","reducer","defaultValue"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;eAEeA,sB;;;AAEf,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAOC,YAAY;AACjB,WAAO,qBAAQA,QAAR,EAAkBC,MAAlB,CAAyB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAAA,oCAChCA,KADgC;AAAA,YAC5CC,IAD4C;AAAA,YACtCC,EADsC;;AAEnDH,eAASE,IAAT,IAAiB,CAACE,KAAD,EAAQC,MAAR,KAAmB;AAClC,eAAOF,GAAGC,KAAH,EAAUC,MAAV,EAAkBR,IAAlB,CAAP;AACD,OAFD;;AAGA,aAAOG,QAAP;AACD,KANM,EAMJ,EANI,CAAP;AAOD,GARD;AASD;;AAED,SAASL,sBAAT,CAAgCW,cAAhC,EAAgDC,OAAhD,EAAyD;AACvD,kBAAOC,EAAP,CACEC,MAAMC,OAAN,CAAcH,QAAQI,YAAtB,CADF,EAEE,uCAFF;;AAKA,QAAMC,UAAU,CAAC,GAAGC,IAAJ,KAAa;AAAA,mBACKA,IADL;AAAA,UAChBF,YADgB,uBACD,EADC;;AAG3B,QAAIG,OAAOC,IAAP,CAAYJ,YAAZ,EAA0BK,MAA1B,GAAmC,CAAvC,EAA0C;AACxC,YAAMC,UAAUV,QAAQI,YAAR,CAAqBO,MAArB,CACdC,cAAc,EAAEA,cAAcR,YAAhB,CADA,CAAhB;;AAGA,sBAAOH,EAAP,CACES,QAAQD,MAAR,KAAmB,CADrB,EAEG,oBAAmBF,OAAOC,IAAP,CAAYT,cAAZ,EAA4Bc,IAA5B,CAClB,IADkB,CAElB,uCAAsCH,QAAQG,IAAR,CACtC,GADsC,CAEtC,gBAAeN,OAAOC,IAAP,CAAYJ,YAAZ,CAA0B,EAN7C;AAQD;;AAED,UAAMd,OAAO,kBAAKc,YAAL,EAAmBJ,QAAQI,YAA3B,CAAb;AACA,UAAMb,WAAWF,cAAcC,IAAd,EAAoBS,cAApB,CAAjB;AACA,UAAMe,UAAU,iCAAcvB,QAAd,EAAwBS,QAAQe,YAAhC,CAAhB;AACA,WAAOD,QAAQ,GAAGR,IAAX,CAAP;AACD,GArBD;;AAsBAD,UAAQD,YAAR,GAAuBJ,QAAQI,YAA/B;AACA,SAAOC,OAAP;AACD","file":"handle-dependent-actions.js","sourcesContent":["import assert from \"assert\";\nimport { handleActions } from \"redux-actions\";\nimport { entries, pick } from \"lodash\";\n\nexport default handleDependentActions;\n\nfunction partialReduce(deps) {\n  return handlers => {\n    return entries(handlers).reduce((registry, entry) => {\n      const [name, fn] = entry;\n      registry[name] = (state, action) => {\n        return fn(state, action, deps);\n      };\n      return registry;\n    }, {});\n  };\n}\n\nfunction handleDependentActions(actionHandlers, options) {\n  assert.ok(\n    Array.isArray(options.dependencies),\n    \"options.dependencies must be an array\"\n  );\n\n  const handler = (...args) => {\n    const [, , dependencies = {}] = args;\n\n    if (Object.keys(dependencies).length > 0) {\n      const missing = options.dependencies.filter(\n        dependency => !(dependency in dependencies)\n      );\n      assert.ok(\n        missing.length === 0,\n        `dependencies for ${Object.keys(actionHandlers).join(\n          \", \"\n        )} must be present in state. missing: ${missing.join(\n          \",\"\n        )}. available: ${Object.keys(dependencies)}`\n      );\n    }\n\n    const deps = pick(dependencies, options.dependencies);\n    const handlers = partialReduce(deps)(actionHandlers);\n    const reducer = handleActions(handlers, options.defaultValue);\n    return reducer(...args);\n  };\n  handler.dependencies = options.dependencies;\n  return handler;\n}\n"]}