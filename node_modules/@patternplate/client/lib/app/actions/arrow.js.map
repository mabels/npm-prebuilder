{"version":3,"sources":["../../../src/app/actions/arrow.js"],"names":["arrow","type","OFFSETS","up","down","default","payload","dispatch","getState","state","searchEnabled","navigationEnabled","offset","pool","index","findIndex","item","contentType","id","next","go","href"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;eAEeA,K;;AACR,MAAMC,OAAO,OAAb;;AAEP,MAAMC,UAAU;AACdC,MAAI,CAAC,CADS;AAEdC,QAAM,CAFQ;AAGdC,WAAS;AAHK,CAAhB;;AAMA,SAASL,KAAT,CAAeM,OAAf,EAAwB;AACtB,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,QAAQD,UAAd,CAD6B,CAG7B;;AACA,QAAIC,MAAMC,aAAV,EAAyB;AACvB;AACD;;AAED,YAAQJ,OAAR;AACE,WAAK,OAAL;AAAc;AACZ,cAAIG,MAAME,iBAAV,EAA6B;AAC3B,mBAAOJ,SAAS,gCAAT,CAAP;AACD;;AACD;AACD;;AACD,WAAK,MAAL;AAAa;AACX,cAAI,CAACE,MAAME,iBAAX,EAA8B;AAC5B,mBAAOJ,SAAS,gCAAT,CAAP;AACD;;AACD;AACD;;AACD,WAAK,IAAL;AACA,WAAK,MAAL;AACA;AAAS;AACP,cAAI,CAACE,MAAME,iBAAX,EAA8B;AAC5B;AACD;;AAED,gBAAMC,SAASN,WAAWJ,OAAX,GAAqBA,QAAQI,OAAR,CAArB,GAAwCJ,QAAQG,OAA/D;AACA,gBAAMQ,OAAO,gBAAWJ,KAAX,CAAb;AACA,gBAAMK,QAAQD,KAAKE,SAAL,CAAgBC,IAAD,IAAW,GAAEA,KAAKC,WAAY,IAAGD,KAAKE,EAAG,EAA/B,KAAqCT,MAAMS,EAA3C,IAAiDT,MAAMS,EAAN,KAAa,GAAb,IAAoBF,KAAKE,EAAL,KAAY,OAA1G,CAAd;AACA,gBAAMC,OAAON,KAAKC,QAAQF,MAAb,CAAb;;AACA,cAAIO,IAAJ,EAAU;AACRC,eAAGb,QAAH,EAAaY,KAAKE,IAAlB;AACD;AACF;AA3BH;AA6BD,GArCD;AAsCD;;AAED,SAASD,EAAT,CAAYb,QAAZ,EAAsB;AACpB,SAAOY,QAAQZ,SAAS,4BAAKY,IAAL,CAAT,CAAf;AACD","file":"arrow.js","sourcesContent":["import { push } from \"react-router-redux\";\nimport toggleNavigation from \"./toggle-navigation\";\nimport {flat as selectPool} from \"../selectors/pool\";\n\nexport default arrow;\nexport const type = \"ARROW\";\n\nconst OFFSETS = {\n  up: -1,\n  down: 1,\n  default: 0\n};\n\nfunction arrow(payload) {\n  return (dispatch, getState) => {\n    const state = getState();\n\n    // Is handled locally\n    if (state.searchEnabled) {\n      return;\n    }\n\n    switch (payload) {\n      case \"right\": {\n        if (state.navigationEnabled) {\n          return dispatch(toggleNavigation());\n        }\n        return;\n      }\n      case \"left\": {\n        if (!state.navigationEnabled) {\n          return dispatch(toggleNavigation());\n        }\n        return;\n      }\n      case \"up\":\n      case \"down\":\n      default: {\n        if (!state.navigationEnabled) {\n          return;\n        }\n\n        const offset = payload in OFFSETS ? OFFSETS[payload] : OFFSETS.default;\n        const pool = selectPool(state);\n        const index = pool.findIndex((item) => `${item.contentType}/${item.id}` === state.id || state.id === '/' && item.id === '/root');\n        const next = pool[index + offset];\n        if (next) {\n          go(dispatch)(next.href);\n        }\n      }\n    }\n  };\n}\n\nfunction go(dispatch) {\n  return next => dispatch(push(next));\n}\n\n"]}