{"version":3,"sources":["../../../src/app/actions/toggle.js"],"names":["toggle","key","property","fn","payload","dispatch","getState","next","forced","query","type","toUpperCase"],"mappings":";;;;;;;AAAA;;AACA;;AAEO,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAC1B,QAAMC,WAAW,uBAAUD,GAAV,CAAjB;;AAEA,QAAME,KAAK,CAACC,UAAU,EAAX,KAAkB;AAC3B,WAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,YAAMC,OAAO,YAAYH,OAAZ,GAAsBA,QAAQI,MAA9B,GAAuC,CAACF,WAAWJ,QAAX,CAArD;AACAG,eAAS,qBAAc;AAAEI,eAAO;AAAE,WAACR,GAAD,GAAOM;AAAT;AAAT,OAAd,CAAT;AACD,KAHD;AAID,GALD;;AAOAJ,KAAGO,IAAH,GAAW,UAAS,uBAAUT,GAAV,EAAeU,WAAf,EAA6B,EAAjD;AACAR,KAAGD,QAAH,GAAcA,QAAd;AACAC,KAAGF,GAAH,GAASA,GAAT;AACA,SAAOE,EAAP;AACD","file":"toggle.js","sourcesContent":["import { camelCase, snakeCase } from \"lodash\";\nimport { patchLocation } from \"./\";\n\nexport function toggle(key) {\n  const property = camelCase(key);\n\n  const fn = (payload = {}) => {\n    return (dispatch, getState) => {\n      const next = \"forced\" in payload ? payload.forced : !getState()[property];\n      dispatch(patchLocation({ query: { [key]: next } }));\n    };\n  };\n\n  fn.type = `TOGGLE_${snakeCase(key).toUpperCase()}`;\n  fn.property = property;\n  fn.key = key;\n  return fn;\n}\n"]}