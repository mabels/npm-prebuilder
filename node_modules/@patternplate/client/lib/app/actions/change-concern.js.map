{"version":3,"sources":["../../../src/app/actions/change-concern.js"],"names":["changeConcern","type","concern","dispatch","getState","state","location","routing","locationBeforeTransitions","parsed","parse","query","source","previous","pathname","ext","extname","hasDemo","pattern","files","some","file","slice","format","dirname"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;eAEeA,a;;AACR,MAAMC,OAAO,gBAAb;;;AAEP,SAASD,aAAT,CAAuBE,OAAvB,EAAgC;AAC9B,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,QAAQD,UAAd;AACA,UAAME,WAAWD,MAAME,OAAN,CAAcC,yBAA/B;;AACA,UAAMC,SAAS,kBAASC,KAAT,CAAeJ,SAASK,KAAT,CAAeC,MAA9B,CAAf;;AACA,UAAMC,WAAWJ,OAAOK,QAAxB;;AACA,UAAMC,MAAM,cAAKC,OAAL,CAAaH,QAAb,CAAZ;;AAEA,UAAMI,UAAUZ,MAAMa,OAAN,CAAcC,KAAd,CAAoBC,IAApB,CAAyBC,QAAQ;AAC/C,aAAOA,KAAKnB,OAAL,KAAiB,MAAjB,IAA2BmB,KAAKpB,IAAL,KAAcc,IAAIO,KAAJ,CAAU,CAAV,CAAhD;AACD,KAFe,CAAhB;AAIA,UAAMrB,OAAOC,YAAY,OAAZ,IAAuBe,OAAvB,GAAiC,QAAjC,GAA4CR,OAAOE,KAAP,CAAaV,IAAtE;;AAEA,UAAMW,SAAS,kBAASW,MAAT,CAAgB;AAC7BT,gBAAW,GAAE,cAAKU,OAAL,CAAaX,QAAb,CAAuB,IAAGX,OAAQ,GAAEa,GAAI,EADxB;AAE7BJ,0BACKF,OAAOE,KADZ;AAEEV;AAFF;AAF6B,KAAhB,CAAf;;AAQAE,aACE,qBAAc;AACZQ,aAAO;AACLC;AADK;AADK,KAAd,CADF;AAOD,GA5BD;AA6BD;;AAEDZ,cAAcC,IAAd,GAAqBA,IAArB","file":"change-concern.js","sourcesContent":["import path from \"path\";\nimport urlQuery from \"../utils/url-query\";\nimport { patchLocation } from \"./\";\n\nexport default changeConcern;\nexport const type = \"CHANGE_CONCERN\";\n\nfunction changeConcern(concern) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const location = state.routing.locationBeforeTransitions;\n    const parsed = urlQuery.parse(location.query.source);\n    const previous = parsed.pathname;\n    const ext = path.extname(previous);\n\n    const hasDemo = state.pattern.files.some(file => {\n      return file.concern === \"demo\" && file.type === ext.slice(1);\n    });\n\n    const type = concern === \"index\" && hasDemo ? \"source\" : parsed.query.type;\n\n    const source = urlQuery.format({\n      pathname: `${path.dirname(previous)}/${concern}${ext}`,\n      query: {\n        ...parsed.query,\n        type\n      }\n    });\n\n    dispatch(\n      patchLocation({\n        query: {\n          source\n        }\n      })\n    );\n  };\n}\n\nchangeConcern.type = type;\n"]}