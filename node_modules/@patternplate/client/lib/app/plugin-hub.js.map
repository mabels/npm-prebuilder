{"version":3,"sources":["../../src/app/plugin-hub.js"],"names":["SINGLETON","nonce","uuid","v4","SCOPE","WeakMap","PluginHub","create","init","has","set","get","constructor","TypeError","ws","src","reconnect","interval","open","onMessage","message","console","log","send","type","stringify"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,YAAY;AAAEC,SAAOC,KAAKC,EAAL;AAAT,CAAlB;AACA,MAAMC,QAAQ,IAAIC,OAAJ,EAAd;;AAEO,MAAMC,SAAN,CAAgB;AACrB,SAAOC,MAAP,CAAcC,IAAd,EAAoB;AAClB,QAAI,CAACJ,MAAMK,GAAN,CAAUT,SAAV,CAAL,EAA2B;AACzBI,YAAMM,GAAN,CAAUV,SAAV,EAAqB,IAAIM,SAAJ,cAChBE,IADgB;AAEnBP,eAAOD;AAFY,SAArB;AAID;;AACD,WAAOI,MAAMO,GAAN,CAAUX,SAAV,CAAP;AACD;;AAEDY,cAAYJ,IAAZ,EAAkB;AAChB,QAAIA,KAAKP,KAAL,KAAeD,SAAnB,EAA8B;AAC5B,YAAM,IAAIa,SAAJ,CAAe,2EAAf,CAAN;AACD;;AAED,UAAMC,KAAK,qCAAoB;AAC7BC,WAAKP,KAAKO,GADmB;AAE7BC,iBAAW,IAFkB;AAG7BC,gBAAU;AAHmB,KAApB,CAAX;AAMAH,OAAGI,IAAH;AAEAJ,OAAGK,SAAH,CAAcC,OAAD,IAAa;AACxBC,cAAQC,GAAR,CAAYF,OAAZ;AACD,KAFD;AAIAhB,UAAMM,GAAN,CAAU,IAAV,EAAgB;AAACI;AAAD,KAAhB;AACD;;AAEDS,OAAKH,OAAL,EAAc;AAAA,uBACChB,MAAMO,GAAN,CAAU,IAAV,CADD;AAAA,UACLG,EADK,cACLA,EADK;;AAEZM,YAAQI,IAAR,GAAe,QAAf;AACAV,OAAGS,IAAH,CAAQ,eAAME,SAAN,CAAgBL,OAAhB,CAAR;AACD;;AAnCoB","file":"plugin-hub.js","sourcesContent":["import ARSON from 'arson';\nimport { WebSocketClient } from \"@patternplate/websocket-client\";\nimport * as uuid from \"uuid\";\n\nconst SINGLETON = { nonce: uuid.v4() };\nconst SCOPE = new WeakMap();\n\nexport class PluginHub {\n  static create(init) {\n    if (!SCOPE.has(SINGLETON)) {\n      SCOPE.set(SINGLETON, new PluginHub({\n        ...init,\n        nonce: SINGLETON\n      }));\n    }\n    return SCOPE.get(SINGLETON);\n  }\n\n  constructor(init) {\n    if (init.nonce !== SINGLETON) {\n      throw new TypeError(`Calling new PluginHub() directly is not supported, use PluginHub.create()`);\n    }\n\n    const ws = new WebSocketClient({\n      src: init.src,\n      reconnect: true,\n      interval: 1000\n    });\n\n    ws.open();\n\n    ws.onMessage((message) => {\n      console.log(message);\n    });\n\n    SCOPE.set(this, {ws});\n  }\n\n  send(message) {\n    const {ws} = SCOPE.get(this);\n    message.type = 'plugin';\n    ws.send(ARSON.stringify(message));\n  }\n}\n"]}