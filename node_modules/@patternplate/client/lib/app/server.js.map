{"version":3,"sources":["../../src/app/server.js"],"names":["location","data","sheet","memoryHistory","store","history","Promise","resolve","reject","routes","error","redirect","props","context","collectStyles","html","css","getStyleElement"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AAEA;;AACA;;;;AAEe,kBAASA,QAAT,EAAmBC,IAAnB,EAAyB;AACtC,QAAMC,QAAQ,kCAAd;AACA,QAAMC,gBAAgB,sCAAoBH,QAApB,CAAtB;AACA,QAAMI,QAAQ,oBAAeD,aAAf,EAA8BF,IAA9B,CAAd;AACA,QAAMI,UAAU,4CAAqBF,aAArB,EAAoCC,KAApC,CAAhB;AAEA,SAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,4BACE;AACEH,aADF;AAEEI,cAAQ,qBAAOL,KAAP,CAFV;AAGEJ;AAHF,KADF,EAME,CAACU,KAAD,EAAQC,QAAR,EAAkBC,KAAlB,KAA4B;AAC1B,UAAIF,KAAJ,EAAW;AACT,eAAOF,OAAOE,KAAP,CAAP;AACD;;AACD,YAAMG,UAAUX,MAAMY,aAAN,CACd;AAAU,eAAOV;AAAjB,SACE,yDAAmBQ,KAAnB,CADF,CADc,CAAhB;AAKA,YAAMG,OAAO,4BAAeF,OAAf,CAAb;AACA,YAAMG,MAAMd,MAAMe,eAAN,EAAZ;AACAV,cAAQ;AAAEQ,YAAF;AAAQC;AAAR,OAAR;AACD,KAlBH;AAoBD,GArBM,CAAP;AAsBD","file":"server.js","sourcesContent":["import React from \"react\";\nimport { renderToString } from \"react-dom/server\";\nimport {\n  createMemoryHistory,\n  match,\n  RouterContext\n} from \"@marionebl/react-router\";\nimport { Provider } from \"react-redux\";\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport { ServerStyleSheet } from \"@patternplate/components\";\n\nimport routes from \"./routes\";\nimport configureStore from \"./store\";\n\nexport default function(location, data) {\n  const sheet = new ServerStyleSheet();\n  const memoryHistory = createMemoryHistory(location);\n  const store = configureStore(memoryHistory, data);\n  const history = syncHistoryWithStore(memoryHistory, store);\n\n  return new Promise((resolve, reject) => {\n    match(\n      {\n        history,\n        routes: routes(store),\n        location\n      },\n      (error, redirect, props) => {\n        if (error) {\n          return reject(error);\n        }\n        const context = sheet.collectStyles(\n          <Provider store={store}>\n            <RouterContext {...props} />\n          </Provider>\n        );\n        const html = renderToString(context);\n        const css = sheet.getStyleElement();\n        resolve({ html, css });\n      }\n    );\n  });\n}\n"]}