{"version":3,"sources":["../../src/app/store.js"],"names":["configureStore","history","initial","reducer","hydrateable","routing","enhance","global","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middlewares","middleware","shortcuts","store","listen","url","state","action","type","payload","options","dispatch","actions"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAEe,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,OAAjC,EAA0C;AACvD,QAAMC,UAAUC,YAAY;AAAWC;AAAX,gDAAZ,CAAhB;AACA,QAAMC,UAAUC,OAAOC,oCAAP,kBAAhB;AAEA,QAAMC,cAAc,sBAAQ,wCAAiBR,OAAjB,CAAR,CAApB;AAEA,QAAMS,aAAa,4BAAgB,GAAGD,WAAnB,CAAnB;AACA,QAAME,YAAY,yBAAlB;AACA,QAAMC,QAAQ,wBACZT,OADY,eAEPD,OAFO;AAEES;AAFF,MAGZL,QAAQI,UAAR,CAHY,CAAd;AAMAG,SAAOD,KAAP,EAAc;AAAEE,SAAK;AAAP,GAAd;AACAH,YAAUC,KAAV;AAEA,SAAOA,KAAP;AACD;;AAED,SAASR,WAAT,CAAqBD,OAArB,EAA8B;AAC5B,SAAO,CAACY,KAAD,EAAQC,MAAR,KAAmB;AACxB,YAAQA,OAAOC,IAAf;AACE,WAAK,eAAL;AACE,eAAOd,QAAQa,OAAOE,OAAf,EAAwBF,MAAxB,CAAP;;AACF;AACE,eAAOb,QAAQY,KAAR,EAAeC,MAAf,CAAP;AAJJ;AAMD,GAPD;AAQD;;AAED,SAASH,MAAT,CAAgBD,KAAhB,EAAuBO,OAAvB,EAAgC;AAC9BP,QAAMQ,QAAN,CAAeC,QAAQR,MAAR,CAAe;AAAEC,SAAKK,QAAQL;AAAf,GAAf,CAAf;AACD","file":"store.js","sourcesContent":["import { createStore, compose, applyMiddleware } from \"redux\";\nimport { routerReducer as routing, routerMiddleware } from \"react-router-redux\";\nimport thunk from \"redux-thunk\";\nimport topology from \"topologically-combine-reducers\";\n\nimport * as actions from \"./actions\";\nimport createShortcuts from \"./shortcuts\";\nimport reducers, { dependencies } from \"./reducers\";\n\nexport default function configureStore(history, initial) {\n  const reducer = hydrateable(topology({ routing, ...reducers }, dependencies));\n  const enhance = global.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const middlewares = [thunk, routerMiddleware(history)];\n\n  const middleware = applyMiddleware(...middlewares);\n  const shortcuts = createShortcuts();\n  const store = createStore(\n    reducer,\n    { ...initial, shortcuts },\n    enhance(middleware)\n  );\n\n  listen(store, { url: \"/api\" });\n  shortcuts(store);\n\n  return store;\n}\n\nfunction hydrateable(reducer) {\n  return (state, action) => {\n    switch (action.type) {\n      case \"@@APPLY_STATE\":\n        return reducer(action.payload, action);\n      default:\n        return reducer(state, action);\n    }\n  };\n}\n\nfunction listen(store, options) {\n  store.dispatch(actions.listen({ url: options.url }));\n}\n"]}