{"version":3,"sources":["../../../src/app/selectors/pool.js"],"names":["selectFlatPool","state","hide","hideEnabled","id","location","routing","locationBeforeTransitions","base","prefix","search","docs","nav","context","enriched","flatten","map","d","concat","filter","item","Boolean","contentType","selectSearch","flatPool","term","matches","find","p","selectPool","tree","initial","reduce","acc","push","Array","isArray","children","flat","type"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEO,MAAMA,iBAAiB,4DAG5BC,UAAU;AACRC,QAAMD,MAAME,WADJ;AAERC,MAAIH,MAAMG,EAFF;AAGRC,YAAUJ,MAAMK,OAAN,CAAcC,yBAHhB;AAIRC,QAAMP,MAAMO,IAJJ;AAKRC,UAAQ,KALA;AAMRC,UAAQ,MAAM;AANN,CAAV,CAH4B,EAW5B,CAACC,IAAD,EAAOC,GAAP,EAAYC,OAAZ,KAAwB;AACtB,QAAMC,WAAWC,QAAQJ,KAAKK,GAAL,CAASC,KAAK;AACrC,WAAO,kBAAOA,CAAP,EAAUJ,OAAV,CAAP;AACD,GAFwB,CAAR,CAAjB;AAGA,SAAOC,SACJI,MADI,CACGN,GADH,EAEJO,MAFI,CAEGC,QAAQC,QAAQD,KAAKhB,EAAb,KAAoBiB,QAAQD,KAAKE,WAAb,CAF/B,CAAP;AAGD,CAlB2B,CAAvB;;AAoBP,MAAMC,eAAe,8BACnBvB,cADmB,EAEnBwB,YAAY;AACV,QAAMd,SAAS,MAAM,EAArB;;AACA,SAAOe,QAAQ;AACb,UAAMC,UAAUhB,OAAOe,IAAP,CAAhB;AACA,WAAOC,QAAQV,GAAR,CAAYI,QAAQI,SAASG,IAAT,CAAcC,KAAKA,EAAExB,EAAF,KAASgB,IAA5B,CAApB,CAAP;AACD,GAHD;AAID,CARkB,CAArB;AAWA,MAAMS,aAAa,4DAGjB5B,UAAU;AACRC,QAAMD,MAAME,WADJ;AAERC,MAAIH,MAAMG,EAFF;AAGRC,YAAUJ,MAAMK,OAAN,CAAcC,yBAHhB;AAIRC,QAAMP,MAAMO,IAJJ;AAKRC,UAAQ,KALA;AAMRC,UAAQa,aAAatB,KAAb;AANA,CAAV,CAHiB,EAWjB,CAACU,IAAD,EAAOC,GAAP,EAAYC,OAAZ,KAAwB;AACtB,QAAMC,WAAWC,QAAQJ,KAAKK,GAAL,CAASC,KAAK;AACrC,WAAO,kBAAOA,CAAP,EAAUJ,OAAV,CAAP;AACD,GAFwB,CAAR,CAAjB;AAGA,SAAOC,SACJI,MADI,CACGN,GADH,EAEJO,MAFI,CAEGC,QAAQC,QAAQD,KAAKhB,EAAb,KAAoBiB,QAAQD,KAAKE,WAAb,CAF/B,CAAP;AAGD,CAlBgB,CAAnB;;AAoBA,SAASP,OAAT,CAAiBe,IAAjB,EAAuBC,UAAU,EAAjC,EAAqC;AACnC,SAAOD,KAAKE,MAAL,CAAY,CAACC,GAAD,EAAMb,IAAN,KAAe;AAChCa,QAAIC,IAAJ,CAASd,IAAT;;AACA,QAAIe,MAAMC,OAAN,CAAchB,KAAKiB,QAAnB,CAAJ,EAAkC;AAChCtB,cAAQK,KAAKiB,QAAb,EAAuBJ,GAAvB;AACD;;AACD,WAAOA,GAAP;AACD,GANM,EAMJF,OANI,CAAP;AAOD;;eAEcF,U;;AACR,MAAMS,OAAO,4DAGlB,CAAC3B,IAAD,EAAOC,GAAP,KAAeG,QAAQJ,KAAKO,MAAL,CAAYN,GAAZ,CAAR,EAA0BO,MAA1B,CAAiCC,QAAQA,KAAKmB,IAAL,KAAc,MAAvD,CAHG,CAAb","file":"pool.js","sourcesContent":["import { createSearch } from \"@patternplate/search\";\nimport { createSelector } from \"reselect\";\nimport { flat as selectDocs } from \"../selectors/docs\";\nimport { flat as selectNavigation } from \"../selectors/navigation\";\nimport { enrich } from \"../selectors/tree\";\n\nexport const selectFlatPool = createSelector(\n  selectDocs,\n  selectNavigation,\n  state => ({\n    hide: state.hideEnabled,\n    id: state.id,\n    location: state.routing.locationBeforeTransitions,\n    base: state.base,\n    prefix: \"doc\",\n    search: () => []\n  }),\n  (docs, nav, context) => {\n    const enriched = flatten(docs.map(d => {\n      return enrich(d, context);\n    }));\n    return enriched\n      .concat(nav)\n      .filter(item => Boolean(item.id) && Boolean(item.contentType))\n  });\n\nconst selectSearch = createSelector(\n  selectFlatPool,\n  flatPool => {\n    const search = () => [];\n    return term => {\n      const matches = search(term);\n      return matches.map(item => flatPool.find(p => p.id === item));\n    };\n  }\n);\n\nconst selectPool = createSelector(\n  selectDocs,\n  selectNavigation,\n  state => ({\n    hide: state.hideEnabled,\n    id: state.id,\n    location: state.routing.locationBeforeTransitions,\n    base: state.base,\n    prefix: \"doc\",\n    search: selectSearch(state)\n  }),\n  (docs, nav, context) => {\n    const enriched = flatten(docs.map(d => {\n      return enrich(d, context);\n    }));\n    return enriched\n      .concat(nav)\n      .filter(item => Boolean(item.id) && Boolean(item.contentType))\n  });\n\nfunction flatten(tree, initial = []) {\n  return tree.reduce((acc, item) => {\n    acc.push(item);\n    if (Array.isArray(item.children)) {\n      flatten(item.children, acc);\n    }\n    return acc;\n  }, initial);\n}\n\nexport default selectPool;\nexport const flat = createSelector(\n  selectDocs,\n  selectNavigation,\n  (docs, nav) => flatten(docs.concat(nav)).filter(item => item.type === \"item\")\n);\n"]}