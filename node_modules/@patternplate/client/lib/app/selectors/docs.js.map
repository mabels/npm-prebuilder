{"version":3,"sources":["../../../src/app/selectors/docs.js"],"names":["sd","state","schema","docs","id","hideEnabled","routing","locationBeforeTransitions","base","tree","hide","location","search","context","prefix","filter","item","type","selectFlatPool","nav","map","d","concat","Boolean","contentType","selectSubSearch","flatPool","term","matches","find","p","selectDocsTree","selectFirstItem","list","selectQueries","manifest","options","query","selectQueried","queries","reduce","acc","r","indexOf","selectDocs","first","queried","children","child","active","flat"],"mappings":"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","file":"docs.js","sourcesContent":["import { createSearch } from \"@patternplate/search\";\nimport { merge } from \"lodash\";\nimport { createSelector } from \"reselect\";\nimport { flat as selectNavigation } from \"../selectors/navigation\";\nimport { enrich, flatten, sanitize } from \"./tree\";\n\nconst sd = createSelector(\n  state => state.schema.docs,\n  state => state.id,\n  state => state.hideEnabled,\n  state => state.routing.locationBeforeTransitions,\n  state => state.base,\n  () => () => [],\n  (tree, id, hide, location, base, search) => {\n    const context = { hide, id, prefix: \"doc\", location, base, search };\n    return flatten(sanitize(merge({}, tree), context)).filter(item => item.type !== \"folder\");\n  }\n);\n\nconst selectFlatPool = createSelector(\n  sd,\n  selectNavigation,\n  state => ({\n    hide: state.hideEnabled,\n    id: state.id,\n    location: state.routing.locationBeforeTransitions,\n    base: state.base,\n    prefix: \"doc\",\n    search: () => []\n  }),\n  (docs, nav, context) => {\n    return docs\n      .map(d => enrich(d, context))\n      .concat(nav)\n      .filter(item => Boolean(item.id) && Boolean(item.contentType))\n  });\n\nconst selectSubSearch = createSelector(\n  selectFlatPool,\n  flatPool => {\n    const search = createSearch(flatPool);\n    return term => {\n      const matches = search(term);\n      return matches.map(item => flatPool.find(p => p.id === item));\n    };\n  }\n);\n\nconst selectDocsTree = createSelector(\n  state => state.schema.docs,\n  state => state.id,\n  state => state.hideEnabled,\n  state => state.routing.locationBeforeTransitions,\n  state => state.base,\n  selectSubSearch,\n  (tree, id, hide, location, base, search) => {\n    const context = { hide, id, prefix: \"doc\", location, base, search };\n    return sanitize(merge({}, tree), context);\n  }\n);\n\nconst selectFirstItem = createSelector(\n  selectDocsTree,\n  (tree) => {\n    const list = flatten(tree);\n    return list ? list[0]: null;\n  }\n);\n\nconst selectQueries = createSelector(\n  selectDocsTree,\n  tree => flatten(tree)\n    .map(item => (item.manifest.options || {}).query)\n    .filter(Boolean)\n);\n\nconst selectQueried = createSelector(\n  selectDocsTree,\n  selectQueries,\n  (tree, queries) => {\n    const search = createSearch(flatten(tree));\n    return queries.reduce((acc, query) => {\n      return acc.concat(search(query).filter(r => acc.indexOf(r) === -1));\n    }, []);\n  }\n);\n\nconst selectDocs = createSelector(\n  selectDocsTree,\n  selectFirstItem,\n  selectQueried,\n  state => state.id,\n  (tree, first, queried, id) => {\n    tree.children = tree.children.filter(child => child.type === \"folder\" || queried.indexOf(child.id) === -1);\n\n    if (id === '/' && first) {\n      first.active = true;\n    }\n    return tree;\n  }\n);\n\nexport default selectDocs;\nexport const flat = createSelector(selectDocs, flatten);\n"]}