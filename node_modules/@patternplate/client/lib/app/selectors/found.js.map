{"version":3,"sources":["../../../src/app/selectors/found.js"],"names":["FLAGS","alpha","beta","rc","stable","deprecated","FIELDS","type","key","value","description","operators","OPERATORS","selectSearch","selectMatches","state","search","queryString","length","selectParsedValue","searchValue","parse","selectLastQuery","parsed","last","query","q","values","cand","selectFields","filter","f","startsWith","selectFieldHit","find","selectParsedQuery","selectOps","hit","map","o","op","includes","selectOpsHit","ops","i","negated","selectFound","pool","matches","sorted","match","p","id","s","index","selectPatterns","found","contentType","selectPatternPool","selectOptions","patterns","field","join","item","manifest","tags","Boolean","tag","versions","version","valid","sort","a","b","gt","v","flags","flag","delta","localeCompare","selectOptionsHit","some","raw","selectLegend","parsedValue","fields","fieldHit","opsHit","options","optionsHit","name","items","selectDocs","selectSuggestion","legend","m","displayName","k","lmatch","selectActiveItem","searchPreview","preview","Math","min","Object","assign","dependents","dependencies"],"mappings":"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","file":"found.js","sourcesContent":["import { createSearch, Query, Term } from \"@patternplate/search\";\nimport { flatten, uniq, uniqBy, sortBy } from \"lodash\";\nimport { createSelector } from \"reselect\";\nimport semver from \"semver\";\nimport {flat as selectPoolFlat} from \"./pool\";\n\nconst FLAGS = {\n  alpha: 0,\n  beta: 1,\n  rc: 2,\n  stable: 3,\n  deprecated: 4\n};\n\nconst FIELDS = [\n  /* {\n    type: \"field\",\n    key: \"depends\",\n    value: \"depends\",\n    description: \"patterns depending on id\",\n    operators: [\"=\", \"!=\", \"^=\", \"~=\"]\n  }, */\n  {\n    type: \"field\",\n    key: \"flag\",\n    value: \"flag\",\n    description: \"being flagged as [value]\",\n    operators: [\"=\", \"!=\", \">\", \">=\", \"<\", \"<=\", \"^=\", \"~=\"]\n  },\n  {\n    type: \"field\",\n    key: \"is\",\n    value: \"is\",\n    description: \"being of type [value]\",\n    operators: [\"=\", \"!=\"]\n  },\n  {\n    type: \"field\",\n    key: \"has\",\n    value: \"has\",\n    description: \"having data of [value]\",\n    operators: [\"=\", \"!=\"]\n  },\n  /* {\n    type: \"field\",\n    key: \"provides\",\n    value: \"provides\",\n    description: \"patterns providing for id\",\n    operators: [\"=\", \"!=\", \"^=\", \"~=\"]\n  }, */\n  {\n    type: \"field\",\n    key: \"tags\",\n    value: \"tags\",\n    description: \"having a tag of [value]\",\n    operators: [\"=\", \"!=\", \"^=\", \"~=\"]\n  },\n  {\n    type: \"field\",\n    key: \"version\",\n    value: \"version\",\n    description: \"having version of [value]\",\n    operators: [\"=\", \"!=\", \">\", \">=\", \"<\", \"<=\", \"^=\", \"~=\"]\n  }\n];\n\nconst OPERATORS = [\n  {\n    type: \"op\",\n    key: \"=\",\n    description: \"exact match\"\n  },\n  {\n    type: \"op\",\n    key: \"!=\",\n    description: \"negated match\"\n  },\n  {\n    type: \"op\",\n    key: \">\",\n    description: \"greater than\"\n  },\n  {\n    type: \"op\",\n    key: \">=\",\n    description: \"greater than or equal\"\n  },\n  {\n    type: \"op\",\n    key: \"<\",\n    description: \"lesser than\"\n  },\n  {\n    type: \"op\",\n    key: \"<=\",\n    description: \"lesser than or equal\"\n  },\n  {\n    type: \"op\",\n    key: \"^=\",\n    description: \"starts with\"\n  },\n  {\n    type: \"op\",\n    key: \"~=\",\n    description: \"contains\"\n  }\n];\n\nconst selectSearch = createSelector(\n  selectPoolFlat,\n  createSearch\n)\n\nconst selectMatches = createSelector(\n  selectSearch,\n  state => state.search,\n  (search, queryString) => {\n    if (typeof queryString !== \"string\" || queryString.length < 3) {\n      return [];\n    }\n    return search(queryString);\n  }\n);\n\nconst selectParsedValue = createSelector(\n  state => state.searchValue,\n  search => Query.parse(search)\n);\n\nconst selectLastQuery = createSelector(selectParsedValue, parsed =>\n  last(parsed)\n);\n\nfunction last(query) {\n  switch (query.type) {\n    case \"string\":\n      return query.value;\n    case \"and\":\n    case \"or\":\n    default: {\n      const q = query || {};\n      const values = q.values || [];\n      const cand = values[values.length - 1];\n      return cand ? last(cand) : \"\";\n    }\n  }\n}\n\nconst selectFields = createSelector(selectLastQuery, query =>\n  FIELDS.filter(f => f.value.startsWith(query))\n);\n\nconst selectFieldHit = createSelector(\n  state => state.searchValue,\n  selectLastQuery,\n  (value, query) => {\n    if (query.length === 0) {\n      return null;\n    }\n\n    return FIELDS.find(f => query.startsWith(f.value));\n  }\n);\n\nconst selectParsedQuery = createSelector(selectLastQuery, query =>\n  Term.parse(query)\n);\n\nconst selectOps = createSelector(\n  selectParsedQuery,\n  selectFieldHit,\n  (parsed, hit) => {\n    if (!hit) {\n      return [];\n    }\n    return hit.operators\n      .map(o => OPERATORS.find(op => op.key === o))\n      .filter(o => !parsed.operators || o.key.includes(parsed.operators))\n      .map(o => {\n        o.value = `${hit.value}${o.key}`;\n        return o;\n      });\n  }\n);\n\nconst selectOpsHit = createSelector(\n  selectParsedQuery,\n  selectOps,\n  (query, ops) => {\n    return ops.find(i => {\n      if (query.negated) {\n        return i.key === `!${query.operators}`;\n      }\n      return i.key === query.operators;\n    });\n  }\n);\n\nexport const selectFound = createSelector(\n  selectPoolFlat,\n  selectMatches,\n  (pool, matches) => {\n    const sorted = uniqBy(\n      sortBy(matches.map(match => pool.find(p => p.id === match)), \"contentType\"),\n      \"id\"\n    );\n    return sorted.map((s, i) => {\n      s.index = i;\n      return s;\n    });\n  }\n);\n\nexport const selectPatterns = createSelector(selectFound, found =>\n  found.filter(f => f.contentType === \"pattern\")\n);\n\nconst selectPatternPool = createSelector(selectPoolFlat, pool =>\n  pool.filter(f => f.contentType === \"pattern\")\n);\n\nconst selectOptions = createSelector(\n  selectPatternPool,\n  selectParsedQuery,\n  selectFieldHit,\n  selectOpsHit,\n  (patterns, parsed, field, op) => {\n    if (!field || !op) {\n      return [];\n    }\n\n    switch (field.key) {\n      case \"has\":\n        return [\n          {\n            type: \"quality\",\n            key: \"docs\",\n            value: [field.key, op.key, \"docs\"].join(\"\"),\n            description: \"colocated markdown\"\n          },\n          /* {\n            type: \"quality\",\n            key: \"dependencies\",\n            value: [field.key, op.key, \"dependencies\"].join(\"\"),\n            description: \"patterns with dependencies\"\n          },\n          {\n            type: \"quality\",\n            key: \"dependents\",\n            value: [field.key, op.key, \"dependents\"].join(\"\"),\n            description: \"patterns with dependents\"\n          }, */\n          {\n            type: \"quality\",\n            key: \"flag\",\n            value: [field.key, op.key, \"flag\"].join(\"\"),\n            description: \"flag specified\"\n          },\n          {\n            type: \"quality\",\n            key: \"version\",\n            value: [field.key, op.key, \"version\"].join(\"\"),\n            description: \"version specified\"\n          },\n          {\n            type: \"quality\",\n            key: \"description\",\n            value: [field.key, op.key, \"description\"].join(\"\"),\n            description: \"description provided\"\n          },\n          {\n            type: \"quality\",\n            key: \"displayName\",\n            value: [field.key, op.key, \"displayName\"].join(\"\"),\n            description: \"display name provided\"\n          },\n          {\n            type: \"quality\",\n            key: \"tags\",\n            value: [field.key, op.key, \"tags\"].join(\"\"),\n            description: \"tag attached\"\n          }\n        ];\n      case \"depends\":\n      case \"provides\":\n        return patterns\n          .filter(item => item.id.startsWith(parsed.value || \"\"))\n          .map(item => {\n            return {\n              type: \"pattern\",\n              key: item.id,\n              value: [field.key, op.key, item.id].join(\"\"),\n              description: `${item.id}`\n            };\n          });\n      case \"tags\":\n        return uniq(flatten(patterns.map(item => item.manifest.tags)))\n          .filter(Boolean)\n          .map(tag => {\n            return {\n              type: \"tag\",\n              key: tag,\n              value: [field.key, op.key, tag].join(\"\"),\n              description: tag\n            };\n          });\n      case \"version\": {\n        const versions = uniqBy(\n          patterns\n            .filter(item =>\n              item.manifest.version.startsWith(parsed.value || \"\")\n            )\n            .map(item => item.manifest.version)\n        )\n          .filter(version => semver.valid(version))\n          .sort((a, b) => (semver.gt(a, b) ? 1 : -1));\n\n        return versions.map(v => {\n          return {\n            type: \"version\",\n            key: v,\n            value: [field.key, op.key, v].join(\"\"),\n            description: `${v}`\n          };\n        });\n      }\n      case \"flag\": {\n        const flags = uniqBy(\n          patterns\n            .filter(item => item.manifest.flag.startsWith(parsed.value || \"\"))\n            .map(item => item.manifest.flag)\n        )\n          .filter(flag => typeof flag === \"string\")\n          .sort((a, b) => {\n            const delta = (FLAGS[a] || 0) - (FLAGS[b] || 0);\n            return delta === 0 ? a.localeCompare(b) : delta;\n          });\n\n        return flags.map(f => {\n          return {\n            type: \"flag\",\n            key: f,\n            value: [field.key, op.key, f].join(\"\"),\n            description: `${f}`\n          };\n        });\n      }\n      case \"is\":\n        return [\n          {\n            type: \"is\",\n            key: \"pattern\",\n            value: [field.key, op.key, \"pattern\"].join(\"\"),\n            description: \"is a pattern\"\n          },\n          {\n            type: \"is\",\n            key: \"doc\",\n            value: [field.key, op.key, \"doc\"].join(\"\"),\n            description: \"is a doc\"\n          }\n        ];\n      default:\n        return [];\n    }\n  }\n);\n\nconst selectOptionsHit = createSelector(\n  selectParsedQuery,\n  selectOptions,\n  (query, ops) => ops.some(o => o.value === query.raw)\n);\n\nexport const selectLegend = createSelector(\n  selectParsedValue,\n  selectParsedQuery,\n  selectFields,\n  selectFieldHit,\n  selectOps,\n  selectOpsHit,\n  selectOptions,\n  selectOptionsHit,\n  (parsedValue, parsed, fields, fieldHit, ops, opsHit, options, optionsHit) => {\n    if (!fieldHit) {\n      return {\n        name: \"Fields\",\n        items: fields\n      };\n    }\n\n    if (!opsHit && !parsed.value) {\n      return {\n        name: \"Operators\",\n        items: ops\n      };\n    }\n\n    if (!optionsHit && fieldHit && opsHit) {\n      return {\n        name: fieldHit.key,\n        items: options\n      };\n    }\n\n    return {\n      name: \"\",\n      items: []\n    };\n  }\n);\n\nexport const selectDocs = createSelector(selectFound, found =>\n  found.filter(f => f.contentType === \"doc\")\n);\n\nexport const selectSuggestion = createSelector(\n  state => state.searchValue,\n  selectPoolFlat,\n  selectLegend,\n  (search, pool, legend) => {\n    if (typeof search !== \"string\" || search.length === 0) {\n      return \"\";\n    }\n\n    const match = pool.find(m =>\n      [m.id, m.name, (m.manifest || {}).displayName].some(\n        k => k && k.startsWith(search)\n      )\n    );\n\n    if (match) {\n      return (\n        [match.id, match.name, match.manifest.displayName].find(\n          k => k && k.startsWith(search)\n        ) || \"\"\n      );\n    }\n\n    const lmatch = (legend.items || []).find(i => i.value.startsWith(search));\n    return lmatch ? lmatch.value : null;\n  }\n);\n\nexport const selectActiveItem = createSelector(\n  state => state,\n  selectFound,\n  state => state.searchPreview,\n  (state, found, preview) => {\n    const index = Math.min(preview, found.length - 1);\n    const item = found[index];\n    return item\n      ? Object.assign({}, item, {\n          index,\n          dependents: [],// rel(\"dependents\"),\n          dependencies: [] // rel(\"dependencies\")\n        })\n      : item;\n  }\n);\n"]}