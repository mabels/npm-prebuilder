{"version":3,"sources":["../../../src/app/utils/navigate.js"],"names":["navigate","id","navigation","scope","fragments","split","fragment","children"],"mappings":";;;;;;;AAAe,SAASA,QAAT,CAAkBC,EAAlB,EAAsBC,UAAtB,EAAkC;AAC/C,MAAIC,QAAQD,UAAZ;AACA,QAAME,YAAYH,GAAGI,KAAH,CAAS,GAAT,CAAlB;AAF+C;AAAA;AAAA;;AAAA;AAI/C,yBAAuBD,SAAvB,8HAAkC;AAAA,YAAvBE,QAAuB;;AAChC,UAAIH,SAASG,YAAYH,KAAzB,EAAgC;AAC9BA,gBAAQA,MAAMG,QAAN,CAAR;AACA;AACD;;AAED,UAAIH,SAASA,MAAMI,QAAf,IAA2BD,YAAYH,MAAMI,QAAjD,EAA2D;AACzDJ,gBAAQA,MAAMI,QAAN,CAAeD,QAAf,CAAR;AACA;AACD;;AAED,aAAO,IAAP;AACD;AAhB8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiB/C,SAAOH,KAAP;AACD","file":"navigate.js","sourcesContent":["export default function navigate(id, navigation) {\n  let scope = navigation;\n  const fragments = id.split(\"/\");\n\n  for (const fragment of fragments) {\n    if (scope && fragment in scope) {\n      scope = scope[fragment];\n      continue;\n    }\n\n    if (scope && scope.children && fragment in scope.children) {\n      scope = scope.children[fragment];\n      continue;\n    }\n\n    return null;\n  }\n  return scope;\n}\n"]}