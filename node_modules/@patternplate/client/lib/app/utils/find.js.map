{"version":3,"sources":["../../../src/app/utils/find.js"],"names":["find","tree","id","type","startsWith","reg","RegExp","frags","replace","split","filter","Boolean","match","children","child","path","every","s","i"],"mappings":";;;;;;eAAeA,I;;;AAEf,SAASA,IAAT,CAAcC,IAAd,EAAoBC,EAApB,EAAwB;AAAEC;AAAF,CAAxB,EAAkC;AAChC,MAAID,OAAO,GAAX,EAAgB;AACd,WAAOD,IAAP;AACD;;AAED,MAAI,CAACC,EAAD,IAAO,CAACA,GAAGE,UAAH,CAAe,GAAED,IAAK,GAAtB,CAAZ,EAAuC;AACrC,WAAO,IAAP;AACD;;AAED,QAAME,MAAM,IAAIC,MAAJ,CAAY,IAAGH,IAAK,GAApB,CAAZ;AAEA,QAAMI,QAAQL,GACXM,OADW,CACHH,GADG,EACE,EADF,EAEXI,KAFW,CAEL,GAFK,EAGXC,MAHW,CAGJC,OAHI,CAAd;AAKA,QAAMC,QAAQX,KAAKY,QAAL,CAAcb,IAAd,CACZc,SACEA,MAAMC,IAAN,CAAWC,KAAX,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUX,MAAMW,CAAN,MAAaD,CAAxC,MACCH,MAAMX,IAAN,KAAeA,IAAf,IAAuBW,MAAMX,IAAN,KAAe,QADvC,CAFU,CAAd;AAMA,SAAOS,KAAP;AACD","file":"find.js","sourcesContent":["export default find;\n\nfunction find(tree, id, { type }) {\n  if (id === \"/\") {\n    return tree;\n  }\n\n  if (!id || !id.startsWith(`${type}/`)) {\n    return null;\n  }\n\n  const reg = new RegExp(`^${type}/`);\n\n  const frags = id\n    .replace(reg, \"\")\n    .split(\"/\")\n    .filter(Boolean);\n\n  const match = tree.children.find(\n    child =>\n      child.path.every((s, i) => frags[i] === s) &&\n      (child.type === type || child.type === \"folder\")\n  );\n\n  return match;\n}\n"]}