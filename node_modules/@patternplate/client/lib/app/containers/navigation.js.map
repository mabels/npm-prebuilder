{"version":3,"sources":["../../../src/app/containers/navigation.js"],"names":["mapProps","mapDispatch","NavigationHeader","NavigationToolbar","state","active","id","docs","componentsEnabled","navigation","query","routing","locationBeforeTransitions","dispatch","onItemClick","e","preventDefault","currentTarget","href","type","parsed","parse","pathname","onLabelClick"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;eAEe,yBAAQA,QAAR,EAAkBC,WAAlB,6B;;;AACR,MAAMC,mBAAmB,2BAAeA,gBAAxC;;AACA,MAAMC,oBAAoB,2BAAeA,iBAAzC;;;AAEP,SAASH,QAAT,CAAkBI,KAAlB,EAAyB;AACvB,SAAO;AACLC,YAAQD,MAAME,EADT;AAELC,UAAM,mBAAWH,KAAX,CAFD;AAGLI,uBAAmBJ,MAAMI,iBAHpB;AAILC,gBAAY,yBAAiBL,KAAjB,CAJP;AAKLM,WAAON,MAAMO,OAAN,CAAcC,yBAAd,CAAwCF;AAL1C,GAAP;AAOD;;AAED,SAAST,WAAT,CAAqBY,QAArB,EAA+B;AAC7B,SAAO,+BACL;AACEC,gBAAYC,CAAZ,EAAe;AACbA,QAAEC,cAAF;;AAEA,UAAI,CAACD,EAAEE,aAAF,CAAgBC,IAArB,EAA2B;AACzB,eAAO;AAAEC,gBAAM;AAAR,SAAP;AACD;;AAED,YAAMC,SAAS,aAAIC,KAAJ,CAAUN,EAAEE,aAAF,CAAgBC,IAA1B,CAAf;;AACA,aAAO,4BAAM,GAAEE,OAAOE,QAAS,IAAGF,OAAOV,KAAM,EAAxC,CAAP;AACD,KAVH;;AAWEa,iBAAab,KAAb,EAAoB;AAClB,aAAO,4BAAc;AAACA;AAAD,OAAd,CAAP;AACD;;AAbH,GADK,EAgBLG,QAhBK,CAAP;AAkBD","file":"navigation.js","sourcesContent":["import url from \"url\";\nimport { connect } from \"react-redux\";\nimport { push } from \"react-router-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { MainNavigation } from \"@patternplate/components\";\nimport { patchLocation } from \"../actions\";\n\nimport selectNavigation from \"../selectors/navigation\";\nimport selectDocs from \"../selectors/docs\";\n\nexport default connect(mapProps, mapDispatch)(MainNavigation);\nexport const NavigationHeader = MainNavigation.NavigationHeader;\nexport const NavigationToolbar = MainNavigation.NavigationToolbar;\n\nfunction mapProps(state) {\n  return {\n    active: state.id,\n    docs: selectDocs(state),\n    componentsEnabled: state.componentsEnabled,\n    navigation: selectNavigation(state),\n    query: state.routing.locationBeforeTransitions.query,\n  };\n}\n\nfunction mapDispatch(dispatch) {\n  return bindActionCreators(\n    {\n      onItemClick(e) {\n        e.preventDefault();\n\n        if (!e.currentTarget.href) {\n          return { type: \"noop\" };\n        }\n\n        const parsed = url.parse(e.currentTarget.href);\n        return push(`${parsed.pathname}?${parsed.query}`);\n      },\n      onLabelClick(query) {\n        return patchLocation({query});\n      }\n    },\n    dispatch\n  );\n}\n"]}