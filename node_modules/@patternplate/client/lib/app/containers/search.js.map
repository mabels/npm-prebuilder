{"version":3,"sources":["../../../src/app/containers/search.js"],"names":["mapProps","state","activeItem","found","selectActiveItem","base","components","selectPatterns","docs","selectDocs","enabled","searchEnabled","legend","selectLegend","shortcuts","suggestion","selectSuggestion","value","searchValue","mapDispatch","dispatch","onChange","e","actions","search","persist","perform","target","onClear","onClick","toggleSearch","focus","onClickOutside","onClose","onComplete","onFocus","onMount","sync","onNavigate","item","pathname","contentType","id","patchLocation","query","onSubmit","preventDefault","onUp","searchPreview","onDown","onActivate","index","onStop"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAO;AACLC,gBAAYC,MAAMC,gBAAN,CAAuBH,KAAvB,CADP;AACsC;AAC3CI,UAAMJ,MAAMI,IAFP;AAGLC,gBAAYH,MAAMI,cAAN,CAAqBN,KAArB,CAHP;AAGoC;AACzCO,UAAML,MAAMM,UAAN,CAAiBR,KAAjB,CAJD;AAI0B;AAC/BS,aAAST,MAAMU,aALV;AAKyB;AAC9BC,YAAQT,MAAMU,YAAN,CAAmBZ,KAAnB,CANH;AAOLa,eAAWb,MAAMa,SAPZ;AAOuB;AAC5BC,gBAAYZ,MAAMa,gBAAN,CAAuBf,KAAvB,CARP;AAQsC;AAC3CgB,WAAOhB,MAAMiB,WATR,CASoB;;AATpB,GAAP;AAWD;;AAED,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,SAAO,+BACL;AACEC,cAAUC,KACRC,QAAQC,MAAR,CAAe;AACbC,eAAS,KADI;AAEbC,eAAS,KAFI;AAGbT,aAAOK,EAAEK,MAAF,CAASV;AAHH,KAAf,CAFJ;AAOEW,aAAS,MACPL,QAAQC,MAAR,CAAe;AAAEC,eAAS,IAAX;AAAiBC,eAAS,IAA1B;AAAgCT,aAAO;AAAvC,KAAf,CARJ;AASEY,aAAS,MAAMN,QAAQO,YAAR,CAAqB;AAAEC,aAAO;AAAT,KAArB,CATjB;AAUEC,oBAAgB,MAAMT,QAAQO,YAAR,CAAqB;AAAEC,aAAO;AAAT,KAArB,CAVxB;AAWEE,aAAS,MAAMV,QAAQO,YAAR,CAAqB;AAAEC,aAAO;AAAT,KAArB,CAXjB;AAYEG,gBAAYjB,SACVM,QAAQC,MAAR,CAAe;AAAEC,eAAS,IAAX;AAAiBC,eAAS,IAA1B;AAAgCT;AAAhC,KAAf,CAbJ;AAcEkB,aAAS,MAAMZ,QAAQO,YAAR,CAAqB;AAAEC,aAAO;AAAT,KAArB,CAdjB;AAeEK,aAAS,MAAMb,QAAQO,YAAR,CAAqB;AAAEO,YAAM;AAAR,KAArB,CAfjB;AAgBEC,gBAAYC,QAAQ;AAClB,YAAMC,WAAY,GAAED,KAAKE,WAAY,IAAGF,KAAKG,EAAG,EAAhD;AACA,aAAOnB,QAAQoB,aAAR,CAAsB;AAAEH,gBAAF;AAAYI,eAAO;AAAE,4BAAkB;AAApB;AAAnB,OAAtB,CAAP;AACD,KAnBH;AAoBEC,cAAUvB,KAAK;AACbA,QAAEwB,cAAF;AACA,aAAOvB,QAAQC,MAAR,CAAe;AACpBC,iBAAS,IADW;AAEpBC,iBAAS,IAFW;AAGpBT,eAAOK,EAAEK,MAAF,CAASH,MAAT,CAAgBP;AAHH,OAAf,CAAP;AAKD,KA3BH;AA4BE8B,UAAM,MAAMxB,QAAQyB,aAAR,CAAsB,IAAtB,CA5Bd;AA6BEC,YAAQ,MAAM1B,QAAQyB,aAAR,CAAsB,MAAtB,CA7BhB;AA8BEE,gBAAYC,SAAS5B,QAAQyB,aAAR,CAAsBG,KAAtB,CA9BvB;AA+BEC,YAAQ9B,KACNC,QAAQC,MAAR,CAAe;AAAEC,eAAS,IAAX;AAAiBC,eAAS,IAA1B;AAAgCT,aAAOK,EAAEK,MAAF,CAASV;AAAhD,KAAf;AAhCJ,GADK,EAmCLG,QAnCK,CAAP;AAqCD;;eAEc,yBAAQpB,QAAR,EAAkBmB,WAAlB,kB","file":"search.js","sourcesContent":["import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport Search from \"../components/search\";\nimport * as actions from \"../actions\";\nimport * as found from \"../selectors/found\";\n\nfunction mapProps(state) {\n  return {\n    activeItem: found.selectActiveItem(state), // Used for highlight in list\n    base: state.base,\n    components: found.selectPatterns(state), // List of components matching state.components\n    docs: found.selectDocs(state), // List of docs matching state.search\n    enabled: state.searchEnabled, // If search is to be displayed\n    legend: found.selectLegend(state),\n    shortcuts: state.shortcuts, // Reference to global shortcuts for help texts\n    suggestion: found.selectSuggestion(state), // The backdrop search suggestion string\n    value: state.searchValue // The synchronous search input value\n  };\n}\n\nfunction mapDispatch(dispatch) {\n  return bindActionCreators(\n    {\n      onChange: e =>\n        actions.search({\n          persist: false,\n          perform: false,\n          value: e.target.value\n        }),\n      onClear: () =>\n        actions.search({ persist: true, perform: true, value: \"\" }),\n      onClick: () => actions.toggleSearch({ focus: true }),\n      onClickOutside: () => actions.toggleSearch({ focus: false }),\n      onClose: () => actions.toggleSearch({ focus: false }),\n      onComplete: value =>\n        actions.search({ persist: true, perform: true, value }),\n      onFocus: () => actions.toggleSearch({ focus: true }),\n      onMount: () => actions.toggleSearch({ sync: true }),\n      onNavigate: item => {\n        const pathname = `${item.contentType}/${item.id}`;\n        return actions.patchLocation({ pathname, query: { \"search-enabled\": false } })\n      },\n      onSubmit: e => {\n        e.preventDefault();\n        return actions.search({\n          persist: true,\n          perform: true,\n          value: e.target.search.value\n        });\n      },\n      onUp: () => actions.searchPreview(\"up\"),\n      onDown: () => actions.searchPreview(\"down\"),\n      onActivate: index => actions.searchPreview(index),\n      onStop: e =>\n        actions.search({ persist: true, perform: true, value: e.target.value })\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapProps, mapDispatch)(Search);\n"]}