{"version":3,"sources":["../../../src/app/render-page/index.js"],"names":["module","exports","renderPage","uri","base","config","schema","isStatic","scripts","manifest","id","getId","pattern","meta","startBase","getBase","staticBase","render","transfer","html","css","head","peek","rewind","icons","attributes","htmlAttributes","data","link","title","parsed","parse","depth","pathname","split","filter","Boolean","length","Array","join"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEAA,OAAOC,OAAP,GAAiBC,UAAjB;;AAEA,SAAeA,UAAf,CAA0BC,GAA1B,EAA+B;AAAEC,MAAF;AAAQC,QAAR;AAAgBC,QAAhB;AAAwBC,UAAxB;AAAkCC;AAAlC,IAA8C,EAA7E,EAAiFC,WAAW,EAA5F;AAAA;AAAA;;AACQC,MADR,GACaC,MAAMR,GAAN,CADb;AAEQS,WAFR,GAEkB,uBAASF,EAAT,EAAaJ,OAAOO,IAApB,KAA6B,EAF/C;AAGQC,aAHR,GAGoBV,OAAOA,IAAP,GAAcW,QAAQZ,GAAR,CAHlC;AAIQa,cAJR,GAIqB,CAACZ,SAAS,GAAT,GAAe,EAAf,GAAoBU,SAArB,IAAkC,SAJvD;AAMQG,UANR,GAMiB;AACbb,UADa;AAEbC,YAFa;AAGbO,aAHa;AAIbN,YAJa;AAKbQ,eALa;AAMbE,gBANa;AAObT,cAPa;AAQbE;AARa,KANjB;AAiBQS,YAjBR,GAiBmB;AACfd,UADe;AAEfC,YAFe;AAGfO,eAAS;AAAEF;AAAF,OAHM;AAIfI,eAJe;AAKfE,gBALe;AAMfT,cANe;AAOfE;AAPe,KAjBnB;AA2BwB,WAAM,qBAAON,GAAP,EAAYc,MAAZ,CAAN;AAAA,uBAAdE,IAAc,QAAdA,IAAc,EAARC,GAAQ,QAARA,GAAQ;AAChBC,UADgB,GACTd,WAAW,qBAAOe,IAAP,EAAX,GAA2B,qBAAOC,MAAP,EADlB;AAEhBC,WAFgB,GAERjB,WAAW,iBAAKe,IAAL,EAAX,GAAyB,iBAAKC,MAAL,EAFjB;AAItB,qBAAO,sBAAO;AACZE,oBAAYJ,KAAKK,cADL;AAEZtB,cAAMU,SAFM;AAGZM,WAHY;AAIZO,cAAMT,QAJM;AAKZC,YALY;AAMZK,aANY;AAOZI,cAAMP,KAAKO,IAPC;AAQZf,cAAMQ,KAAKR,IARC;AASZgB,eAAOR,KAAKQ,KATA;AAUZrB,iBAASA,YAAY,KAAZ,GACL,CACC,GAAEQ,UAAW,IAAGP,SAAS,mBAAT,CAA8B,EAD/C,EAEC,GAAEO,UAAW,IAAGP,SAAS,WAAT,CAAsB,EAFvC,CADK,GAKL;AAfQ,OAAP,CAAP;AAJsB;AA3BxB;AAAA;;AAkDA,SAASM,OAAT,CAAiBZ,GAAjB,EAAsB;AACpB,QAAM2B,SAAS,aAAIC,KAAJ,CAAU5B,GAAV,CAAf;;AACA,QAAM6B,QAAQF,OAAOG,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2BC,MAA3B,CAAkCC,OAAlC,EAA2CC,MAAzD;AACA,SAAOL,QAAQ,CAAR,GAAY,kBAAKM,MAAMN,KAAN,CAAL,EAAmB,IAAnB,EAAyBO,IAAzB,CAA8B,GAA9B,CAAZ,GAAiD,GAAxD;AACD;;AAED,SAAS5B,KAAT,CAAeR,GAAf,EAAoB;AAClB,QAAM2B,SAAS,aAAIC,KAAJ,CAAU5B,GAAV,CAAf;;AACA,SAAO,8BAAgB2B,OAAOG,QAAvB,CAAP;AACD","file":"index.js","sourcesContent":["import Path from \"path\";\nimport url from \"url\";\nimport { fill } from \"lodash\";\nimport { Icon } from \"@patternplate/components\";\nimport Helmet from \"react-helmet\";\n\nimport router from \"../server\";\nimport layout from \"../layouts\";\nimport getIdByPathname from \"../utils/get-id-by-pathname\";\nimport navigate from \"../utils/navigate\";\n\nmodule.exports = renderPage;\n\nasync function renderPage(uri, { base, config, schema, isStatic, scripts } = {}, manifest = {}) {\n  const id = getId(uri);\n  const pattern = navigate(id, schema.meta) || {};\n  const startBase = base ? base : getBase(uri);\n  const staticBase = (base === \"/\" ? \"\" : startBase) + \"/static\";\n\n  const render = {\n    base,\n    config,\n    pattern,\n    schema,\n    startBase,\n    staticBase,\n    isStatic,\n    manifest\n  };\n\n  const transfer = {\n    base,\n    config,\n    pattern: { id },\n    startBase,\n    staticBase,\n    isStatic,\n    manifest\n  };\n\n  const { html, css } = await router(uri, render);\n  const head = isStatic ? Helmet.peek() : Helmet.rewind();\n  const icons = isStatic ? Icon.peek() : Icon.rewind();\n\n  return layout({\n    attributes: head.htmlAttributes,\n    base: startBase,\n    css,\n    data: transfer,\n    html,\n    icons,\n    link: head.link,\n    meta: head.meta,\n    title: head.title,\n    scripts: scripts !== false\n      ? [\n        `${staticBase}/${manifest[\"vendors~client.js\"]}`,\n        `${staticBase}/${manifest[\"client.js\"]}`\n      ]\n      : []\n  });\n}\n\nfunction getBase(uri) {\n  const parsed = url.parse(uri);\n  const depth = parsed.pathname.split(\"/\").filter(Boolean).length;\n  return depth > 0 ? fill(Array(depth), \"..\").join(\"/\") : \".\";\n}\n\nfunction getId(uri) {\n  const parsed = url.parse(uri);\n  return getIdByPathname(parsed.pathname);\n}\n"]}