{"version":3,"sources":["../src/client.js"],"names":["ARSON","require","url","fetch","platform","router","default","merge","global","document","main","catch","err","console","error","slot","querySelector","vault","getData","data","isStatic","innerHTML","body","setAttribute","parse","decodeURIComponent","textContent","getStateData","base","schema","getPlatformData","getWindowData","navigation","meta","prefix","credentials","json","charAt","length","slice","clientRuntimeName","name","clientRuntimeVersion","version","clientOsName","os","clientOsVersion","window","width","innerWidth","height","innerHeight"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;;AACA,MAAMC,MAAMD,QAAQ,KAAR,CAAZ;;AACA,MAAME,QAAQF,QAAQ,kBAAR,CAAd;;AACA,MAAMG,WAAWH,QAAQ,UAAR,CAAjB;;AACA,MAAMI,SAASJ,QAAQ,cAAR,EAAwBK,OAAvC;;iBACkBL,QAAQ,QAAR,C;MAAVM,K,YAAAA,K;;gBAEaC,M;MAAbC,Q,WAAAA,Q;AAERC,OAAOC,KAAP,CAAaC,OAAO;AAClBC,UAAQC,KAAR,CAAcF,GAAd;AACD,CAFD;;AAIA,SAAeF,IAAf;AAAA;AAAA;AACQK,QADR,GACeN,SAASO,aAAT,CAAuB,sCAAvB,CADf;AAEQC,SAFR,GAEgBR,SAASO,aAAT,CAAuB,yCAAvB,CAFhB;AAGe,WAAME,QAAQD,KAAR,CAAN;AAAPE,UAAO;;AAEb,UAAIA,KAAKC,QAAT,EAAmB;AACjBL,aAAKM,SAAL,GAAiB,EAAjB;AACD;;AAEDhB,aAAOc,IAAP,EAAaJ,IAAb;AAEAN,eAASa,IAAT,CAAcC,YAAd,CAA2B,cAA3B,EAA2C,IAA3C;AARa;AAAA;AAHf;AAAA;;AAcA,SAAeL,OAAf,CAAuBD,KAAvB;AAAA;AAAA;AACQE,QADR,GACenB,MAAMwB,KAAN,CAAYC,mBAAmBR,MAAMS,WAAzB,CAAZ,CADf;AAEiB,WAAMC,aAAaR,KAAKS,IAAlB,CAAN;AAATC,YAAS;AAEf,qBAAOtB,MAAMY,IAAN,EAAYW,iBAAZ,EAA+BC,eAA/B,EAAgD;AACrDF,cADqD;AAErDG,oBAAYH,OAAOI;AAFkC,OAAhD,CAAP;AAFe;AAFjB;AAAA;;AAUA,SAAeN,YAAf,CAA4BC,IAA5B;AAAA;AACU,WAAMzB,MAAO,GAAE+B,OAAON,IAAP,CAAa,iBAAtB,EAAwC;AAACO,mBAAa;AAAd,KAAxC,CAAN;AAAR,qBAAQ,QAAD,CAA0EC,IAA1E,EAAP;AAAQ;AADV;AAAA;;AAIA,SAASF,MAAT,CAAgBN,IAAhB,EAAsB;AACpB,SAAOA,KAAKS,MAAL,CAAYT,KAAKU,MAAL,GAAc,CAA1B,MAAiC,GAAjC,GACHV,KAAKW,KAAL,CAAW,CAAX,EAAcX,KAAKU,MAAL,GAAc,CAA5B,CADG,GAEHV,IAFJ;AAGD;;AAED,SAASE,eAAT,GAA2B;AACzB,SAAO;AACLU,uBAAmBpC,SAASqC,IADvB;AAELC,0BAAsBtC,SAASuC,OAF1B;AAGLC,kBAAcxC,SAASyC,EAAT,CAAYJ,IAHrB;AAILK,qBAAiB1C,SAASyC,EAAT,CAAYF;AAJxB,GAAP;AAMD;;AAED,SAASZ,aAAT,GAAyB;AACvB,SAAO;AACLgB,YAAQ;AACNC,aAAOxC,OAAOyC,UADR;AAENC,cAAQ1C,OAAO2C;AAFT;AADH,GAAP;AAMD","file":"client.js","sourcesContent":["const ARSON = require(\"arson\");\nconst url = require(\"url\");\nconst fetch = require(\"isomorphic-fetch\");\nconst platform = require(\"platform\");\nconst router = require(\"./app/client\").default;\nconst { merge } = require(\"lodash\");\n\nconst { document } = global;\n\nmain().catch(err => {\n  console.error(err);\n});\n\nasync function main() {\n  const slot = document.querySelector('[data-application-el=\"patternplate\"]');\n  const vault = document.querySelector('[data-application-state=\"patternplate\"]');\n  const data = await getData(vault);\n\n  if (data.isStatic) {\n    slot.innerHTML = '';\n  }\n\n  router(data, slot);\n\n  document.body.setAttribute(\"data-mounted\", true);\n}\n\nasync function getData(vault) {\n  const data = ARSON.parse(decodeURIComponent(vault.textContent));\n  const schema = await getStateData(data.base);\n\n  return merge(data, getPlatformData(), getWindowData(), {\n    schema,\n    navigation: schema.meta\n  });\n}\n\nasync function getStateData(base) {\n  return (await fetch(`${prefix(base)}/api/state.json`, {credentials: \"include\"})).json();\n}\n\nfunction prefix(base) {\n  return base.charAt(base.length - 1) === \"/\"\n    ? base.slice(0, base.length - 1)\n    : base;\n}\n\nfunction getPlatformData() {\n  return {\n    clientRuntimeName: platform.name,\n    clientRuntimeVersion: platform.version,\n    clientOsName: platform.os.name,\n    clientOsVersion: platform.os.version\n  };\n}\n\nfunction getWindowData() {\n  return {\n    window: {\n      width: global.innerWidth,\n      height: global.innerHeight\n    }\n  };\n}\n"]}