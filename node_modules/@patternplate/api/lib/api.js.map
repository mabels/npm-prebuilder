{"version":3,"sources":["../src/api.js"],"names":["express","require","WebSocket","cover","demo","main","scripts","createCompiler","createSubscription","createWatcher","module","exports","api","server","config","cwd","Promise","all","target","clientQueue","serverQueue","queues","client","watcher","wss","Server","queue","mw","get","use","subscribe","unsubscribe","stop","clients","forEach","close"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;;AACA,MAAMC,YAAYD,QAAQ,IAAR,CAAlB;;AAEA,MAAME,QAAQF,QAAQ,SAAR,CAAd;;AACA,MAAMG,OAAOH,QAAQ,QAAR,CAAb;;AACA,MAAMI,OAAOJ,QAAQ,QAAR,CAAb;;AACA,MAAMK,UAAUL,QAAQ,WAAR,CAAhB;;iBAE2BA,QAAQ,mBAAR,C;MAAnBM,c,YAAAA,c;;kBACuBN,QAAQ,uBAAR,C;MAAvBO,kB,aAAAA,kB;;kBACkBP,QAAQ,kBAAR,C;MAAlBQ,a,aAAAA,a;;AAERC,OAAOC,OAAP,GAAiBC,GAAjB;;AAEA,SAAeA,GAAf,CAAmB;AAAEC,QAAF;AAAUC,QAAV;AAAkBC;AAAlB,CAAnB;AAAA;AAAA;;AACqC,WAAMC,QAAQC,GAAR,CAAY,CACnDV,eAAe;AAAEO,YAAF;AAAUC,SAAV;AAAeG,cAAQ;AAAvB,KAAf,CADmD,EAEnDX,eAAe;AAAEO,YAAF;AAAUC,SAAV;AAAeG,cAAQ;AAAvB,KAAf,CAFmD,CAAZ,CAAN;AAAA,wDAA5BC,WAA4B,aAAfC,WAAe;AAK7BC,YAL6B,GAKpB;AACbC,gBAAQH,WADK;AAEbN,gBAAQO;AAFK,OALoB;AAUnB,aAAMX,cAAc;AAAEK,cAAF;AAAUC;AAAV,OAAd,CAAN;AAAVQ,eAAU;AACVC,WADU,GACJ,IAAItB,UAAUuB,MAAd,CAAqB;AAAEZ;AAAF,SAArB,CADI;AAIM,eAAMR,KAAK;AAAES,gBAAF;AAAUC;AAAV,SAAL,CAAN;AACC,iBAAMX,KAAK;AAAEU,kBAAF;AAAUC,eAAV;AAAeW,mBAAOL,OAAOR;AAA7B,WAAL,CAAN;AACD,mBAAMV,MAAM;AAAEW,oBAAF;AAAUC,iBAAV;AAAeW,qBAAOL,OAAOR;AAA7B,aAAN,CAAN;AACf,qBAAMP,QAAQ;AAAEoB,uBAAOL,OAAOC;AAAhB,eAAR,CAAN;AAJDK,kBAIC,GAJI3B,UACR4B,GADQ,CACJ,aADI,EACW,QADX,EAERA,GAFQ,CAEJ,cAFI,EAEY,QAFZ,EAGRA,GAHQ,CAGJ,aAHI,EAGW,QAHX,EAIRC,GAJQ,CAIJ,QAJI,CAIJ;AAEPF,mBAAGG,SAAH,GAAetB,mBAAmB;AAChCO,qBADgC;AAEhCD,wBAFgC;AAGhCO,wBAHgC;AAIhCG,qBAJgC;AAKhCX,wBALgC;AAMhCU;AANgC,iBAAnB,CAAf;;AASAI,mBAAGI,WAAH,GAAiB,MAAM;AACrBR,0BAAQS,IAAR;AACAZ,8BAAYY,IAAZ;AACAb,8BAAYa,IAAZ;AACAR,sBAAIS,OAAJ,CAAYC,OAAZ,CAAoBZ,UAAU;AAC5BA,2BAAOa,KAAP;AACD,mBAFD;AAGD,iBAPD;;AASA,+BAAOR,EAAP;AApBO;AADe;AADC;AADD;AAJN;AAVmB;AADrC;AAAA","file":"api.js","sourcesContent":["const express = require(\"express\");\nconst WebSocket = require(\"ws\");\n\nconst cover = require(\"./cover\");\nconst demo = require(\"./demo\");\nconst main = require(\"./main\");\nconst scripts = require(\"./scripts\");\n\nconst { createCompiler } = require(\"./create-compiler\");\nconst { createSubscription } = require(\"./create-subscription\");\nconst { createWatcher } = require(\"./create-watcher\");\n\nmodule.exports = api;\n\nasync function api({ server, config, cwd }) {\n  const [clientQueue, serverQueue] = await Promise.all([\n    createCompiler({ config, cwd, target: \"web\" }),\n    createCompiler({ config, cwd, target: \"node\" })\n  ]);\n\n  const queues = {\n    client: clientQueue,\n    server: serverQueue\n  };\n\n  const watcher = await createWatcher({ config, cwd });\n  const wss = new WebSocket.Server({ server });\n\n  const mw = express()\n    .get(\"/state.json\", await main({ config, cwd }))\n    .get(\"/demo/*.html\", await demo({ config, cwd, queue: queues.server }))\n    .get(\"/cover.html\", await cover({ config, cwd, queue: queues.server }))\n    .use(await scripts({ queue: queues.client }));\n\n  mw.subscribe = createSubscription({\n    cwd,\n    config,\n    queues,\n    wss,\n    server,\n    watcher\n  });\n\n  mw.unsubscribe = () => {\n    watcher.stop();\n    serverQueue.stop();\n    clientQueue.stop();\n    wss.clients.forEach(client => {\n      client.close();\n    });\n  };\n\n  return mw;\n}\n"]}