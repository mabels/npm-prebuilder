{"version":3,"sources":["../src/cover.js"],"names":["url","require","AggregateError","unindent","stringHash","fromString","RENDER_PATH","COVER_PATH","module","exports","options","config","main","req","res","err","error","Array","isArray","console","status","send","message","cover","sendStatus","wait","queue","fs","getModule","fromFs","render","html","base","params","scripts","default","observable","Promise","resolve","reject","type","payload","subscribe","filename","componentBundleSource","String","readFileSync","getExports","exportsCache","Map","source","hash","has","set","get","content","prefix","head","css","before","after","js"],"mappings":"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","file":"cover.js","sourcesContent":["const url = require(\"url\");\nconst AggregateError = require(\"aggregate-error\");\nconst unindent = require(\"unindent\");\nconst stringHash = require(\"string-hash\");\nconst fromString = require(\"require-from-string\");\n\nconst RENDER_PATH = \"/patternplate.node.render.js\";\nconst COVER_PATH = \"/patternplate.node.cover.js\";\n\nmodule.exports = async options => {\n  const {config} = options;\n\n  return async function main(req, res) {\n    try {\n      if (!config.cover) {\n        return res.sendStatus(404);\n      }\n\n      const {fs} = await wait(options.queue);\n      const getModule = fromFs(fs);\n\n      const cover = getModule(COVER_PATH);\n      const render = typeof cover.render === \"function\" ? cover.render : getModule(RENDER_PATH);\n      res.send(html(render(cover), {base: req.params.base || \"/\", scripts: typeof cover.default === 'function'}));\n    } catch (err) {\n      const error = Array.isArray(err) ? new AggregateError(err) : err;\n      console.error(error);\n      res.status(500).send(error.message);\n    }\n  };\n};\n\n// Todo: Unify with wait and fromFS, getExports from demo.js\nfunction wait(observable) {\n  return new Promise((resolve, reject) => {\n    const [message = {}] = observable.queue;\n    switch (message.type) {\n      case 'done':\n        return resolve(message.payload);\n      case 'error':\n        return reject(message.payload);\n      default:\n        observable.subscribe(\n          queue => {\n            const [message] = queue;\n            switch (message.type) {\n              case 'done':\n                return resolve(message.payload);\n              case 'error':\n                return reject(message.payload);\n              default:\n                return null;\n            }\n          },\n          reject\n        );\n    }\n  });\n}\n\nfunction fromFs(fs) {\n  return filename => {\n    const componentBundleSource = String(fs.readFileSync(filename));\n    return getExports(componentBundleSource, filename);\n  };\n}\n\nconst exportsCache = new Map();\n\nfunction getExports(source, {filename}) {\n  const hash = stringHash(source);\n\n  if (!exportsCache.has(hash)) {\n    exportsCache.set(hash, fromString(source, filename));\n  }\n\n  return exportsCache.get(hash);\n}\n\nfunction html(content, options) {\n  const prefix = url.resolve(options.base, \"api\");\n\n  return unindent(`\n    <!doctype html>\n    <html lang=\"en\">\n      <head>\n        <!-- content.head -->\n        ${content.head || \"\"}\n        <style>\n          /* content.css */\n          ${content.css || \"\"}\n        </style>\n      </head>\n      <body>\n        <!-- content.before -->\n        ${content.before || \"\"}\n        <!-- content.html -->\n        <div data-patternplate-mount=\"data-patternplate-mount\">${content.html || \"\"}</div>\n        <!-- content.after -->\n        ${content.after || \"\"}\n        <script src=\"${prefix}/patternplate.web.probe.js\"></script>\n        ${options.scripts ? `\n          <script src=\"${prefix}/patternplate.web.cover.js\"></script>\n          <script src=\"${prefix}/patternplate.web.mount.js\"></script>\n          <script src=\"${prefix}/patternplate.web.cover-client.js\"></script>\n        ` : ''}\n        <script>\n          /* content.js */\n          ${content.js || \"\"}\n        </script>\n      </body>\n    </html>\n  `);\n}\n"]}