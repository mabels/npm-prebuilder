!function(){var t=Function.prototype.bind.call(Function.prototype.call,Promise.prototype.then),o=function(t,o){return new t(function(t){t(o())})};CreateMethodProperty(Promise.prototype,"finally",function(r){var e=this;if("object"!==Type(e))throw new TypeError("Method %PromisePrototype%.finally called on incompatible receiver "+Object.prototype.toString.call(O));var n=SpeciesConstructor(e,Promise);if(!1===IsCallable(r))var i=r,c=r;else var i=function(e){return t(o(n,r),function(){return e})},c=function(e){return t(o(n,r),function(){throw e})};return t(e,i,c)})}();