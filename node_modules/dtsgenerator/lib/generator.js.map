{"version":3,"sources":["generator.ts"],"names":["Generator","Generator.constructor","Generator.generate","Generator.walk","Generator.add","Generator.setEnv","Generator.clear","Generator.id","Generator.doProcess","Generator.getTypename","Generator.searchRef","Generator.parseType","Generator.parseTypeModel","Generator.parseTypeCollection","Generator.parseTypeProperty","Generator.parseTypePropertyNamedType"],"mappings":"AAAA,2CAA2C;AAE3C,IAAO,OAAO,WAAW,cAAc,CAAC,CAAC;AAEzC,IAAO,KAAK,WAAW,SAAS,CAAC,CAAC;AAElC,IAAO,OAAO,WAAW,WAAW,CAAC,CAAC;AAGtC,IAAM,SAAS;IA4DbA,SA5DIA,SAASA,CA4DOA,MAAyBA;QAAzBC,WAAMA,GAANA,MAAMA,CAAmBA;QAFrCA,QAAGA,GAAGA,EAAEA,CAACA;QAGfA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA,EAAEA,CAACA,CAACA,CAACA;YACfA,OAAOA,CAACA,KAAKA,CAACA,MAAMA,CAACA,CAACA;YACtBA,MAAMA,IAAIA,KAAKA,CAACA,kBAAkBA,CAACA,CAACA;QACtCA,CAACA;QACDA,IAAIA,CAACA,GAAGA,GAAGA,MAAMA,CAACA,EAAEA,CAACA;QACrBA,EAAEA,CAACA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,KAAKA,GAAGA,CAACA,CAACA,CAACA;YACxBA,IAAIA,CAACA,GAAGA,GAAGA,GAAGA,GAAGA,IAAIA,CAACA,GAAGA,CAACA;QAC5BA,CAACA;IACHA,CAACA;IAjEMD,kBAAQA,GAAfA,UAAgBA,MAAeA;QAC7BE,IAAIA,OAAOA,GAAGA,IAAIA,OAAOA,EAAEA,CAACA;QAC5BA,EAAEA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA;YACXA,OAAOA,CAACA,UAAUA,CAACA,MAAMA,CAACA,CAACA;QAC7BA,CAACA;QACDA,IAAIA,CAACA,IAAIA,CAACA,OAAOA,EAAEA,IAAIA,CAACA,GAAGA,CAACA,CAACA;QAC7BA,MAAMA,CAACA,OAAOA,CAACA,YAAYA,EAAEA,CAACA;IAChCA,CAACA;IACcF,cAAIA,GAAnBA,UAAoBA,OAAgBA,EAAEA,GAAQA;QAA9CG,iBAkBCA;QAjBCA,IAAIA,IAAIA,GAAGA,MAAMA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA;QACnCA,IAAIA,CAACA,OAAOA,CAACA,UAACA,GAAGA;YACfA,IAAIA,GAAGA,GAAGA,GAAGA,CAACA,GAAGA,CAACA,CAACA;YACnBA,EAAEA,CAACA,CAACA,GAAGA,YAAYA,SAASA,CAACA,CAACA,CAACA;gBAC7BA,IAAIA,CAACA,GAAcA,GAAGA,CAACA;gBACvBA,CAACA,CAACA,SAASA,CAACA,OAAOA,CAACA,CAACA;YACvBA,CAACA;YAACA,IAAIA,CAACA,CAACA;gBACNA,EAAEA,CAACA,CAACA,OAAOA,CAACA,MAAMA,KAAKA,CAACA,CAACA,CAACA,CAACA;oBACzBA,OAAOA,CAACA,MAAMA,CAACA,UAAUA,CAACA,CAACA;gBAC7BA,CAACA;gBACDA,OAAOA,CAACA,MAAMA,CAACA,SAASA,CAACA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA,UAAUA,CAACA,IAAIA,CAACA,CAACA;gBACvDA,OAAOA,CAACA,cAAcA,EAAEA,CAACA;gBACzBA,KAAIA,CAACA,IAAIA,CAACA,OAAOA,EAAEA,GAAGA,CAACA,CAACA;gBACxBA,OAAOA,CAACA,cAAcA,EAAEA,CAACA;gBACzBA,OAAOA,CAACA,UAAUA,CAACA,GAAGA,CAACA,CAACA;YAC1BA,CAACA;QACHA,CAACA,CAACA,CAACA;IACLA,CAACA;IAEMH,aAAGA,GAAVA,UAAWA,MAAyBA;QAClCI,EAAEA,CAACA,CAACA,OAAOA,MAAMA,KAAKA,QAAQA,CAACA,CAACA,CAACA;YAC/BA,MAAMA,GAAGA,IAAIA,CAACA,KAAKA,CAAMA,MAAMA,CAACA,CAACA;QACnCA,CAACA;QACDA,IAAIA,CAACA,GAAGA,IAAIA,SAASA,CAACA,MAAMA,CAACA,CAACA;QAC9BA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA;QACnBA,IAAIA,CAACA,MAAMA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA;IACtCA,CAACA;IACcJ,gBAAMA,GAArBA,UAAsBA,KAAeA,EAAEA,CAAYA;QACjDK,IAAIA,GAAGA,GAAGA,IAAIA,CAACA,GAAGA,CAACA;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AACAA,qDADqDA;QACrDA,EAAEA,CAACA,CAACA,QAAQA,CAACA,KAAKA,CAACA,CAACA,CAACA;YACnBA,OAAOA,QAAQA,CAACA,KAAKA,CAACA;YACtBA,QAAQA,CAACA,IAAIA,GAAGA,KAAKA,CAACA;QACxBA,CAACA;QACDA,EAAEA,CAACA,CAACA,QAAQA,CAACA,IAAIA,CAACA,CAACA,CAACA;YAClBA,QAAQA,CAACA,MAAMA,GAAGA,QAAQA,CAACA,IAAIA,CAACA,QAAQA,EAAEA,CAACA;YAC3CA,QAAQA,CAACA,IAAIA,GAAGA,KAAKA,CAACA;QACxBA,CAACA;QACDA,CAACA,OAAOA,EAAEA,KAAKA,CAACA,CAACA,OAAOA,CAACA,UAACA,OAAOA;YAC/BA,IAAIA,MAAMA,GAAQA,QAAQA,CAACA;YAC3BA,EAAEA,CAACA,CAACA,MAAMA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA;gBACpBA,OAAOA,CAACA,KAAKA,CAACA,QAAQA,CAACA,CAACA;gBACxBA,MAAMA,IAAIA,KAAKA,CAACA,wBAAwBA,GAAGA,OAAOA,CAACA,CAACA;YACtDA,CAACA;QACHA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA;YACTA,OAAOA,CAACA,SAASA,CAACA,IAAIA,CAACA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA;QACvCA,CAACA;QACDA,EAAEA,CAACA,CAACA,QAAQA,CAACA,IAAIA,CAACA,CAACA,CAACA;YAClBA,IAAIA,GAAGA,GAAGA,IAAIA,CAACA,SAASA,CAACA,QAAQA,CAACA,IAAIA,CAACA,CAACA;YACxCA,EAAEA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBACRA,EAAEA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBACXA,IAAIA,CAACA,0BAA0BA,CAACA,OAAOA,EAAEA,GAAGA,GAAGA,IAAIA,CAACA,WAAWA,CAACA,GAAGA,CAACA,EAAEA,CAACA,EAAEA,GAAGA,EAAEA,SAASA,CAACA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A,OAAOA,CAACA,MAAMA,CAACA,QAAQA,CAACA,CAACA;QACzBA,EAAEA,CAACA,CAACA,SAASA,CAACA,CAACA,CAACA;YACdA,OAAOA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA;YACpBA,EAAEA,CAACA,CAACA,QAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA;gBACpBA,OAAOA,CAACA,MAAMA,CAACA,MAAMA,CAACA,CAACA,MAAMA,CAACA,QAAQA,CAACA,MAAMA,CAACA,CAACA;YACjDA,CAACA;YACDA,OAAOA,CAACA,UAAUA,EAAEA,CAACA;QACvBA,CAACA;QAACA,IAAIA,CAACA,CAACA;YACNA,EAAEA,CAACA,CAACA,QAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA;gBACpBA,OAAOA,CAACA,MAAMA,CAACA,MAAMA,CAACA,CAACA,MAAMA,CAACA,QAAQA,CAACA,MAAMA,CAACA,CAACA,MAAMA,CAACA,MAAMA,CAACA,CAACA;YAChEA,CAACA;QACHA,CAACA;IACHA,CAACA;IAvPcf,aAAGA,GAAQA,EAAEA,CAACA;IACdA,aAAGA,GAAgCA,EAAEA,CAACA;IAwPvDA,gBAACA;AAADA,CA1PA,AA0PCA,IAAA;AAED,AAAmB,iBAAV,SAAS,CAAC","file":"generator.js","sourceRoot":"/Users/horiuchihiroki/work/typescript/dtsgenerator/","sourcesContent":["/// <referece path=\"../typings/tsd.d.ts\" />\n\nimport pointer = require('json-pointer');\nimport model = require(\"./model\");\nimport utils = require(\"./utils\");\n\nimport Process = require(\"./process\");\n\n\nclass Generator {\n  private static env: any = {};\n  private static map: { [id: string]: Generator } = {};\n\n  static generate(header?: string): string {\n    var process = new Process();\n    if (header) {\n      process.outputLine(header);\n    }\n    this.walk(process, this.env);\n    return process.toDefinition();\n  }\n  private static walk(process: Process, env: any): void {\n    var keys = Object.keys(env).sort();\n    keys.forEach((key) => {\n      var val = env[key];\n      if (val instanceof Generator) {\n        var g: Generator = val;\n        g.doProcess(process);\n      } else {\n        if (process.indent === 0) {\n          process.output(\"declare \");\n        }\n        process.output(\"module \").output(key).outputLine(\" {\");\n        process.increaseIndent();\n        this.walk(process, val);\n        process.decreaseIndent();\n        process.outputLine(\"}\");\n      }\n    });\n  }\n\n  static add(schema: model.IJsonSchema): void {\n    if (typeof schema === \"string\") {\n      schema = JSON.parse(<any>schema);\n    }\n    var g = new Generator(schema);\n    this.map[g.id] = g;\n    this.setEnv(pointer.parse(g.id), g);\n  }\n  private static setEnv(paths: string[], g: Generator): void {\n    var obj = this.env;\n    var name: string = paths.splice(paths.length - 1)[0];\n    paths.forEach((path, i) => {\n      if (!obj[path]) {\n        obj[path] = {};\n      }\n      obj = obj[path];\n    });\n    obj[name] = g;\n  }\n\n  static clear(): void {\n    this.env = {};\n    this.map = {};\n  }\n\n\n  private _id = \"\";\n\n  constructor(private schema: model.IJsonSchema) {\n    if (!schema.id) {\n      console.error(schema);\n      throw new Error(\"id is not found.\");\n    }\n    this._id = schema.id;\n    if (this._id[0] !== \"/\") {\n      this._id = \"/\" + this._id;\n    }\n  }\n\n  public get id(): string {\n    return this._id;\n  }\n\n  public doProcess(process: Process): void {\n    this.parseType(process, this.schema);\n  }\n\n\n  private getTypename(id: string): string {\n    var name = id.split(\"/\").slice(-1)[0];\n    return utils.capitalizeName(name);\n  }\n\n  private searchRef(ref: string): model.IJsonSchema {\n    var splited = ref.split('#', 2);\n    var id = splited[0];\n    var path = splited[1];\n\n    if (id && !Generator.map[id]) {\n      throw new Error(\"$ref target is not found: \" + id);\n    }\n    if (path[0] && path[0] !== '/') {\n      throw new Error(\"$ref path must be absolute path: \" + path);\n    }\n    var schema = id ? Generator.map[id].schema : this.schema;\n    return pointer.get(schema, path);\n  }\n\n\n  private parseType(process: Process, type: model.IJsonSchema): void {\n    if (type.type !== \"object\" && type.type !== \"any\" && type.type !== \"array\") {\n      console.error(type);\n      throw new Error(\"unknown type: \" + type.type);\n    }\n\n    process.outputJSDoc(type.description);\n    if (type.type === \"array\") {\n      this.parseTypeCollection(process, type);\n    } else {\n      this.parseTypeModel(process, type);\n    }\n  }\n\n  private parseTypeModel(process: Process, type: model.IJsonSchema) {\n    var name = this.getTypename(this._id);\n    process.output(\"export interface I\").output(name).outputLine(\" {\");\n    process.increaseIndent();\n\n    if (type.type === \"any\") {\n      // TODO this is not permitted property access by dot.\n      process.outputLine(\"[name: string]: any; // any\");\n    }\n\n    Object.keys(type.properties || {}).forEach((propertyName) => {\n      var property = type.properties[propertyName];\n      process.outputJSDoc(property.description);\n      if (type.required && type.required.indexOf(propertyName) < 0) {\n        propertyName = propertyName + \"?\";\n      }\n      this.parseTypeProperty(process, propertyName, property);\n    });\n\n    process.decreaseIndent();\n    process.outputLine(\"}\");\n  }\n\n  private parseTypeCollection(process: Process, type: model.IJsonSchema) {\n    var name = this.getTypename(this._id);\n    process.output(\"export interface I\").output(name).output(\" extends Array<\");\n    if (type.items.$ref) {\n      this.parseTypePropertyNamedType(process, \"I\" + type.items.$ref, type.items, false);\n    } else {\n      this.parseTypeProperty(process, null, type.items, false);\n    }\n    process.outputLine(\"> {\");\n    process.outputLine(\"}\");\n  }\n\n  private parseTypeProperty(process: Process, name: string, property: model.IJsonSchema, terminate = true): void {\n    if (property.allOf) {\n      var schema: any = {};\n      property.allOf.forEach((p) => {\n        if (p.$ref) {\n          p = this.searchRef(p.$ref);\n        }\n        utils.mergeSchema(schema, p);\n      });\n      this.parseTypeProperty(process, name, schema, terminate);\n      return;\n    }\n    // TODO I hope to use union type for 'anyOf' support.\n    if (property.anyOf) {\n      delete property.anyOf;\n      property.type = 'any';\n    }\n    if (property.enum) {\n      property.format = property.enum.toString();\n      property.type = \"any\";\n    }\n    ['oneOf', 'not'].forEach((keyword) => {\n      var schema: any = property;\n      if (schema[keyword]) {\n        console.error(property);\n        throw new Error(\"unsupported property: \" + keyword);\n      }\n    });\n\n    if (name) {\n      process.outputKey(name).output(\": \");\n    }\n    if (property.$ref) {\n      var ref = this.searchRef(property.$ref);\n      if (ref) {\n        if (ref.id) {\n          this.parseTypePropertyNamedType(process, \"I\" + this.getTypename(ref.id), ref, terminate);\n        } else {\n          this.parseTypeProperty(process, null, ref, terminate);\n        }\n      } else {\n        this.parseTypePropertyNamedType(process, \"I\" + property.$ref, property, terminate);\n      }\n      return;\n    }\n    var tsType = utils.toTSType(property.type, property);\n    if (tsType) {\n      this.parseTypePropertyNamedType(process, tsType, property, terminate);\n      return;\n    }\n    if (property.type === \"object\") {\n      process.outputLine(\"{\");\n      process.increaseIndent();\n      if (property.properties) {\n        Object.keys(property.properties).forEach((propertyName) => {\n          var nextProperty = property.properties[propertyName];\n          if (property.required && property.required.indexOf(propertyName) < 0) {\n            propertyName = propertyName + \"?\";\n          }\n          this.parseTypeProperty(process, propertyName, nextProperty);\n        });\n      } else if (property.additionalProperties) {\n        process.output(\"[name:string]: \");\n        this.parseTypeProperty(process, null, property.additionalProperties, false);\n        process.outputLine(\";\");\n      }\n      process.decreaseIndent();\n      process.output(\"}\");\n      if (terminate) {\n        process.outputLine(\";\");\n      }\n\n    } else if (property.type === \"array\") {\n      this.parseTypeProperty(process, null, property.items, false);\n      process.output(\"[]\");\n      if (terminate) {\n        process.outputLine(\";\");\n      }\n\n    } else {\n      console.error(property);\n      throw new Error(\"unknown type: \" + property.type);\n    }\n  }\n\n  private parseTypePropertyNamedType(process: Process, typeName: string, property: model.IJsonSchema, terminate = true) {\n    process.output(typeName);\n    if (terminate) {\n      process.output(\";\");\n      if (property.format) {\n        process.output(\" // \").output(property.format);\n      }\n      process.outputLine();\n    } else {\n      if (property.format) {\n        process.output(\" /* \").output(property.format).output(\" */ \");\n      }\n    }\n  }\n\n}\n\nexport = Generator;\n\n"]}