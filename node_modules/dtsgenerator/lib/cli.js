/// <reference path="../typings/tsd.d.ts" />
var fs = require("fs");
var path = require("path");
var program = require("commander");
var mkdirp = require("mkdirp");
var asyncblock = require("asyncblock");
var dtsgenerator = require("./index");
var pkg = require("../package.json");
// <hoge> is reuired, [hoge] is optional
program.version(pkg.version).usage('[options] <file ...>').option("-o, --out [file]", "output d.ts filename").parse(process.argv);
var opts = program;
if (opts.args.length === 0) {
    program.help();
}
else {
    processGenerate();
}
function processGenerate() {
    asyncblock(function (flow) {
        opts.args.forEach(function (arg) {
            fs.readFile(arg, { encoding: 'utf-8' }, flow.add(arg));
        });
        var contents = flow.wait();
        var schemas = Object.keys(contents).map(function (key) { return contents[key]; });
        var result = dtsgenerator(schemas);
        if (opts.out) {
            flow.sync(mkdirp(path.dirname(opts.out), flow.callback()));
            flow.sync(fs.writeFile(opts.out, result, { encoding: 'utf-8' }, flow.callback()));
        }
        else {
            console.log(result);
        }
    });
}

//# sourceMappingURL=cli.js.map