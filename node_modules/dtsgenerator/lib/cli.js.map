{"version":3,"sources":["cli.ts"],"names":["processGenerate"],"mappings":"AAAA,4CAA4C;AAE5C,IAAO,EAAE,WAAW,IAAI,CAAC,CAAC;AAC1B,IAAO,IAAI,WAAW,MAAM,CAAC,CAAC;AAC9B,IAAO,OAAO,WAAW,WAAW,CAAC,CAAC;AACtC,IAAO,MAAM,WAAW,QAAQ,CAAC,CAAC;AAClC,IAAI,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAEvC,IAAO,YAAY,WAAW,SAAS,CAAC,CAAC;AAEzC,IAAI,GAAG,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAGrC,AACA,wCADwC;AACxC,OAAO,CACJ,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CACpB,KAAK,CAAC,sBAAsB,CAAC,CAC7B,MAAM,CAAC,kBAAkB,EAAE,sBAAsB,CAAC,CAClD,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAMvB,IAAI,IAAI,GAAyB,OAAO,CAAC;AAEzC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,OAAO,CAAC,IAAI,EAAE,CAAC;AACjB,CAAC;AAAC,IAAI,CAAC,CAAC;IACN,eAAe,EAAE,CAAC;AACpB,CAAC;AAGD,SAAS,eAAe;IACtBA,UAAUA,CAACA,UAACA,IAASA;QACnBA,IAAIA,CAACA,IAAIA,CAACA,OAAOA,CAACA,UAACA,GAAGA;YACpBA,EAAEA,CAACA,QAAQA,CAACA,GAAGA,EAAEA,EAAEA,QAAQA,EAAEA,OAAOA,EAAEA,EAAEA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA;QACzDA,CAACA,CAACA,CAACA;QACHA,IAAIA,QAAQA,GAAGA,IAAIA,CAACA,IAAIA,EAAEA,CAACA;QAC3BA,IAAIA,OAAOA,GAAqCA,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,GAAGA,CAACA,UAACA,GAAGA,IAAKA,OAAAA,QAAQA,CAACA,GAAGA,CAACA,EAAbA,CAAaA,CAACA,CAACA;QAClGA,IAAIA,MAAMA,GAAGA,YAAYA,CAACA,OAAOA,CAACA,CAACA;QAEnCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA;YACbA,IAAIA,CAACA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,CAACA,IAAIA,CAACA,GAAGA,CAACA,EAAEA,IAAIA,CAACA,QAAQA,EAAEA,CAACA,CAACA,CAACA;YAC3DA,IAAIA,CAACA,IAAIA,CAACA,EAAEA,CAACA,SAASA,CAACA,IAAIA,CAACA,GAAGA,EAAEA,MAAMA,EAAEA,EAAEA,QAAQA,EAAEA,OAAOA,EAAEA,EAAEA,IAAIA,CAACA,QAAQA,EAAEA,CAACA,CAACA,CAACA;QACpFA,CAACA;QAACA,IAAIA,CAACA,CAACA;YACNA,OAAOA,CAACA,GAAGA,CAACA,MAAMA,CAACA,CAACA;QACtBA,CAACA;IACHA,CAACA,CAACA,CAACA;AACLA,CAACA","file":"cli.js","sourceRoot":"/Users/horiuchihiroki/work/typescript/dtsgenerator/","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\" />\n\nimport fs = require(\"fs\");\nimport path = require(\"path\");\nimport program = require(\"commander\");\nimport mkdirp = require(\"mkdirp\");\nvar asyncblock = require(\"asyncblock\");\n\nimport dtsgenerator = require(\"./index\");\n\nvar pkg = require(\"../package.json\");\n\n\n// <hoge> is reuired, [hoge] is optional\nprogram\n  .version(pkg.version)\n  .usage('[options] <file ...>')\n  .option(\"-o, --out [file]\", \"output d.ts filename\")\n  .parse(process.argv);\n\ninterface ICommandOptions {\n  out?: string;\n  args: string[];\n}\nvar opts: ICommandOptions = <any>program;\n\nif (opts.args.length === 0) {\n  program.help();\n} else {\n  processGenerate();\n}\n\n\nfunction processGenerate(): void {\n  asyncblock((flow: any) => {\n    opts.args.forEach((arg) => {\n      fs.readFile(arg, { encoding: 'utf-8' }, flow.add(arg));\n    });\n    var contents = flow.wait();\n    var schemas: dtsgenerator.model.IJsonSchema[] = Object.keys(contents).map((key) => contents[key]);\n    var result = dtsgenerator(schemas);\n\n    if (opts.out) {\n      flow.sync(mkdirp(path.dirname(opts.out), flow.callback()));\n      flow.sync(fs.writeFile(opts.out, result, { encoding: 'utf-8' }, flow.callback()));\n    } else {\n      console.log(result);\n    }\n  });\n}\n\n"]}