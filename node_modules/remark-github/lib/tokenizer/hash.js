'use strict';

var gh = require('../util/gh');
var shaEnd = require('../util/sha-end');
var locator = require('../util/regex-locator');
var abbr = require('../util/abbreviate');

exports = hash;
module.exports = exports;

exports.locator = locator(/\b[a-f0-9]{7,40}\b/gi);
exports.notInLink = true;

/* Blacklist of SHAs which are also valid words.
 *
 * GitHub allows abbreviating SHAs up to 7 characters.
 * These are ignored in text because they might just be
 * ment as normal words.  If youâ€™d like these to link to
 * their SHAs, use more than 7 characters.
 *
 * Generated by:
 *
 *     egrep -i "^[a-f0-9]{7,}$" /usr/share/dict/words
 */
var BLACKLIST = [
  'deedeed',
  'fabaceae'
];

/* Tokenise a hash. */
function hash(eat, value, silent) {
  var self = this;
  var index = shaEnd(value, 0);
  var subvalue;
  var href;
  var now;
  var node;
  var exit;

  if (index === -1) {
    return;
  }

  subvalue = value.slice(0, index);

  if (isBlacklisted(subvalue)) {
    return;
  }

  /* istanbul ignore if - maybe used by plug-ins */
  if (silent) {
    return true;
  }

  href = gh(self.githubRepo) + 'commit/' + subvalue;
  now = eat.now();
  exit = self.enterLink();

  node = eat(subvalue)({
    type: 'link',
    title: null,
    url: href,
    children: self.tokenizeInline(subvalue, now)
  });

  exit();

  node.children = [{
    type: 'inlineCode',
    value: abbr(subvalue),
    position: node.children[0].position
  }];

  return node;
}

/* Check if a value is a SHA. */
function isBlacklisted(sha) {
  return BLACKLIST.indexOf(sha.toLowerCase()) !== -1;
}
