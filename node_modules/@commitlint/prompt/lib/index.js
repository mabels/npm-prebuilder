'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.prompter = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

require('babel-polyfill');

var _vorpal = require('vorpal');

var _vorpal2 = _interopRequireDefault(_vorpal);

var _input = require('./input');

var _input2 = _interopRequireDefault(_input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Entry point for commitizen
 * @param {object} _ inquirer instance passed by commitizen, unused
 * @param {function} commit callback to execute with complete commit message
 * @return {string} genersated commit message
 */
var prompter = exports.prompter = function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(_, commit) {
    var message;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0, _input2.default)(_vorpal2.default);

          case 2:
            message = _context.sent;

            commit(message);

          case 4:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function prompter(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}(); /* eslint-disable import/no-unassigned-import, import/prefer-default-export */