'use strict';

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _parse = require('../library/parse');

var _parse2 = _interopRequireDefault(_parse);

var _subjectCase25 = require('./subject-case');

var _subjectCase26 = _interopRequireDefault(_subjectCase25);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var messages = {
	empty: 'chore:\n',
	lowercase: 'chore: subject',
	mixedcase: 'chore: sUbJeCt',
	uppercase: 'chore: SUBJECT'
};

var parsed = {
	empty: (0, _parse2.default)(messages.empty),
	lowercase: (0, _parse2.default)(messages.lowercase),
	mixedcase: (0, _parse2.default)(messages.mixedcase),
	uppercase: (0, _parse2.default)(messages.uppercase)
};

(0, _ava2.default)('with empty subject should succeed for "never lowercase"', function () {
	var _ref = _asyncToGenerator(function* (t) {
		var _subjectCase = (0, _subjectCase26.default)((yield parsed.empty), 'never', 'lowercase'),
		    _subjectCase2 = _slicedToArray(_subjectCase, 1),
		    actual = _subjectCase2[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x) {
		return _ref.apply(this, arguments);
	};
}());

(0, _ava2.default)('with empty subject should succeed for "always lowercase"', function () {
	var _ref2 = _asyncToGenerator(function* (t) {
		var _subjectCase3 = (0, _subjectCase26.default)((yield parsed.empty), 'always', 'lowercase'),
		    _subjectCase4 = _slicedToArray(_subjectCase3, 1),
		    actual = _subjectCase4[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x2) {
		return _ref2.apply(this, arguments);
	};
}());

(0, _ava2.default)('with empty subject should succeed for "never uppercase"', function () {
	var _ref3 = _asyncToGenerator(function* (t) {
		var _subjectCase5 = (0, _subjectCase26.default)((yield parsed.empty), 'never', 'uppercase'),
		    _subjectCase6 = _slicedToArray(_subjectCase5, 1),
		    actual = _subjectCase6[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x3) {
		return _ref3.apply(this, arguments);
	};
}());

(0, _ava2.default)('with empty subject should succeed for "always uppercase"', function () {
	var _ref4 = _asyncToGenerator(function* (t) {
		var _subjectCase7 = (0, _subjectCase26.default)((yield parsed.empty), 'always', 'uppercase'),
		    _subjectCase8 = _slicedToArray(_subjectCase7, 1),
		    actual = _subjectCase8[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x4) {
		return _ref4.apply(this, arguments);
	};
}());

(0, _ava2.default)('with lowercase subject should fail for "never lowercase"', function () {
	var _ref5 = _asyncToGenerator(function* (t) {
		var _subjectCase9 = (0, _subjectCase26.default)((yield parsed.lowercase), 'never', 'lowercase'),
		    _subjectCase10 = _slicedToArray(_subjectCase9, 1),
		    actual = _subjectCase10[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x5) {
		return _ref5.apply(this, arguments);
	};
}());

(0, _ava2.default)('with lowercase subject should succeed for "always lowercase"', function () {
	var _ref6 = _asyncToGenerator(function* (t) {
		var _subjectCase11 = (0, _subjectCase26.default)((yield parsed.lowercase), 'always', 'lowercase'),
		    _subjectCase12 = _slicedToArray(_subjectCase11, 1),
		    actual = _subjectCase12[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x6) {
		return _ref6.apply(this, arguments);
	};
}());

(0, _ava2.default)('with mixedcase subject should succeed for "never lowercase"', function () {
	var _ref7 = _asyncToGenerator(function* (t) {
		var _subjectCase13 = (0, _subjectCase26.default)((yield parsed.mixedcase), 'never', 'lowercase'),
		    _subjectCase14 = _slicedToArray(_subjectCase13, 1),
		    actual = _subjectCase14[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x7) {
		return _ref7.apply(this, arguments);
	};
}());

(0, _ava2.default)('with mixedcase subject should fail for "always lowercase"', function () {
	var _ref8 = _asyncToGenerator(function* (t) {
		var _subjectCase15 = (0, _subjectCase26.default)((yield parsed.mixedcase), 'always', 'lowercase'),
		    _subjectCase16 = _slicedToArray(_subjectCase15, 1),
		    actual = _subjectCase16[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x8) {
		return _ref8.apply(this, arguments);
	};
}());

(0, _ava2.default)('with mixedcase subject should succeed for "never uppercase"', function () {
	var _ref9 = _asyncToGenerator(function* (t) {
		var _subjectCase17 = (0, _subjectCase26.default)((yield parsed.mixedcase), 'never', 'uppercase'),
		    _subjectCase18 = _slicedToArray(_subjectCase17, 1),
		    actual = _subjectCase18[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x9) {
		return _ref9.apply(this, arguments);
	};
}());

(0, _ava2.default)('with mixedcase subject should fail for "always uppercase"', function () {
	var _ref10 = _asyncToGenerator(function* (t) {
		var _subjectCase19 = (0, _subjectCase26.default)((yield parsed.mixedcase), 'always', 'uppercase'),
		    _subjectCase20 = _slicedToArray(_subjectCase19, 1),
		    actual = _subjectCase20[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x10) {
		return _ref10.apply(this, arguments);
	};
}());

(0, _ava2.default)('with uppercase subject should fail for "never uppercase"', function () {
	var _ref11 = _asyncToGenerator(function* (t) {
		var _subjectCase21 = (0, _subjectCase26.default)((yield parsed.uppercase), 'never', 'uppercase'),
		    _subjectCase22 = _slicedToArray(_subjectCase21, 1),
		    actual = _subjectCase22[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x11) {
		return _ref11.apply(this, arguments);
	};
}());

(0, _ava2.default)('with lowercase subject should succeed for "always uppercase"', function () {
	var _ref12 = _asyncToGenerator(function* (t) {
		var _subjectCase23 = (0, _subjectCase26.default)((yield parsed.uppercase), 'always', 'uppercase'),
		    _subjectCase24 = _slicedToArray(_subjectCase23, 1),
		    actual = _subjectCase24[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x12) {
		return _ref12.apply(this, arguments);
	};
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,