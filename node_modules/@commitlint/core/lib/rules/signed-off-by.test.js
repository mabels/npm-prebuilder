'use strict';

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _parse = require('../library/parse');

var _parse2 = _interopRequireDefault(_parse);

var _signedOffBy = require('./signed-off-by');

var _signedOffBy2 = _interopRequireDefault(_signedOffBy);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var messages = {
	empty: 'chore:\n',
	with: `chore: subject\nbody\nfooter\nSigned-off-by:\n\n`,
	without: `chore: subject\nbody\nfooter\n\n`,
	inSubject: `chore: subject Signed-off-by:\nbody\nfooter\n\n`,
	inBody: `chore: subject\nbody Signed-off-by:\nfooter\n\n`
};

var parsed = {
	empty: (0, _parse2.default)(messages.empty),
	with: (0, _parse2.default)(messages.with),
	without: (0, _parse2.default)(messages.without),
	inSubject: (0, _parse2.default)(messages.inSubject),
	inBody: (0, _parse2.default)(messages.inBody)
};

(0, _ava2.default)('empty against "always signed-off-by" should fail', function () {
	var _ref = _asyncToGenerator(function* (t) {
		var _check = (0, _signedOffBy2.default)((yield parsed.empty), 'always', 'Signed-off-by:'),
		    _check2 = _slicedToArray(_check, 1),
		    actual = _check2[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x) {
		return _ref.apply(this, arguments);
	};
}());

(0, _ava2.default)('empty against "never signed-off-by" should succeed', function () {
	var _ref2 = _asyncToGenerator(function* (t) {
		var _check3 = (0, _signedOffBy2.default)((yield parsed.empty), 'never', 'Signed-off-by:'),
		    _check4 = _slicedToArray(_check3, 1),
		    actual = _check4[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x2) {
		return _ref2.apply(this, arguments);
	};
}());

(0, _ava2.default)('with against "always signed-off-by" should succeed', function () {
	var _ref3 = _asyncToGenerator(function* (t) {
		var _check5 = (0, _signedOffBy2.default)((yield parsed.with), 'always', 'Signed-off-by:'),
		    _check6 = _slicedToArray(_check5, 1),
		    actual = _check6[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x3) {
		return _ref3.apply(this, arguments);
	};
}());

(0, _ava2.default)('with against "never signed-off-by" should fail', function () {
	var _ref4 = _asyncToGenerator(function* (t) {
		var _check7 = (0, _signedOffBy2.default)((yield parsed.with), 'never', 'Signed-off-by:'),
		    _check8 = _slicedToArray(_check7, 1),
		    actual = _check8[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x4) {
		return _ref4.apply(this, arguments);
	};
}());

(0, _ava2.default)('without against "always signed-off-by" should fail', function () {
	var _ref5 = _asyncToGenerator(function* (t) {
		var _check9 = (0, _signedOffBy2.default)((yield parsed.without), 'always', 'Signed-off-by:'),
		    _check10 = _slicedToArray(_check9, 1),
		    actual = _check10[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x5) {
		return _ref5.apply(this, arguments);
	};
}());

(0, _ava2.default)('without against "never signed-off-by" should succeed', function () {
	var _ref6 = _asyncToGenerator(function* (t) {
		var _check11 = (0, _signedOffBy2.default)((yield parsed.without), 'never', 'Signed-off-by:'),
		    _check12 = _slicedToArray(_check11, 1),
		    actual = _check12[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x6) {
		return _ref6.apply(this, arguments);
	};
}());

(0, _ava2.default)('inSubject against "always signed-off-by" should fail', function () {
	var _ref7 = _asyncToGenerator(function* (t) {
		var _check13 = (0, _signedOffBy2.default)((yield parsed.inSubject), 'always', 'Signed-off-by:'),
		    _check14 = _slicedToArray(_check13, 1),
		    actual = _check14[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x7) {
		return _ref7.apply(this, arguments);
	};
}());

(0, _ava2.default)('inSubject against "never signed-off-by" should succeed', function () {
	var _ref8 = _asyncToGenerator(function* (t) {
		var _check15 = (0, _signedOffBy2.default)((yield parsed.inSubject), 'never', 'Signed-off-by:'),
		    _check16 = _slicedToArray(_check15, 1),
		    actual = _check16[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x8) {
		return _ref8.apply(this, arguments);
	};
}());

(0, _ava2.default)('inBody against "always signed-off-by" should fail', function () {
	var _ref9 = _asyncToGenerator(function* (t) {
		var _check17 = (0, _signedOffBy2.default)((yield parsed.inBody), 'always', 'Signed-off-by:'),
		    _check18 = _slicedToArray(_check17, 1),
		    actual = _check18[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x9) {
		return _ref9.apply(this, arguments);
	};
}());

(0, _ava2.default)('inBody against "never signed-off-by" should succeed', function () {
	var _ref10 = _asyncToGenerator(function* (t) {
		var _check19 = (0, _signedOffBy2.default)((yield parsed.inBody), 'never', 'Signed-off-by:'),
		    _check20 = _slicedToArray(_check19, 1),
		    actual = _check20[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x10) {
		return _ref10.apply(this, arguments);
	};
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ydWxlcy9zaWduZWQtb2ZmLWJ5LnRlc3QuanMiXSwibmFtZXMiOlsibWVzc2FnZXMiLCJlbXB0eSIsIndpdGgiLCJ3aXRob3V0IiwiaW5TdWJqZWN0IiwiaW5Cb2R5IiwicGFyc2VkIiwidCIsImFjdHVhbCIsImV4cGVjdGVkIiwiaXMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsV0FBVztBQUNoQkMsUUFBTyxVQURTO0FBRWhCQyxPQUFPLGtEQUZTO0FBR2hCQyxVQUFVLGtDQUhNO0FBSWhCQyxZQUFZLGlEQUpJO0FBS2hCQyxTQUFTO0FBTE8sQ0FBakI7O0FBUUEsSUFBTUMsU0FBUztBQUNkTCxRQUFPLHFCQUFNRCxTQUFTQyxLQUFmLENBRE87QUFFZEMsT0FBTSxxQkFBTUYsU0FBU0UsSUFBZixDQUZRO0FBR2RDLFVBQVMscUJBQU1ILFNBQVNHLE9BQWYsQ0FISztBQUlkQyxZQUFXLHFCQUFNSixTQUFTSSxTQUFmLENBSkc7QUFLZEMsU0FBUSxxQkFBTUwsU0FBU0ssTUFBZjtBQUxNLENBQWY7O0FBUUEsbUJBQUssa0RBQUw7QUFBQSw4QkFBeUQsV0FBTUUsQ0FBTixFQUFXO0FBQUEsZUFDbEQsNEJBQU0sTUFBTUQsT0FBT0wsS0FBbkIsR0FBMEIsUUFBMUIsRUFBb0MsZ0JBQXBDLENBRGtEO0FBQUE7QUFBQSxNQUM1RE8sTUFENEQ7O0FBRW5FLE1BQU1DLFdBQVcsS0FBakI7QUFDQUYsSUFBRUcsRUFBRixDQUFLRixNQUFMLEVBQWFDLFFBQWI7QUFDQSxFQUpEOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQU1BLG1CQUFLLG9EQUFMO0FBQUEsK0JBQTJELFdBQU1GLENBQU4sRUFBVztBQUFBLGdCQUNwRCw0QkFBTSxNQUFNRCxPQUFPTCxLQUFuQixHQUEwQixPQUExQixFQUFtQyxnQkFBbkMsQ0FEb0Q7QUFBQTtBQUFBLE1BQzlETyxNQUQ4RDs7QUFFckUsTUFBTUMsV0FBVyxJ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QUE7QUFBQSxNQUMvREcsTUFEK0Q7O0FBRXRFLE1BQU1DLFdBQVcsSUFBakI7QUFDQUYsSUFBRUcsRUFBRixDQUFLRixNQUFMLEVBQWFDLFFBQWI7QUFDQSxFQUpEOztBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6InNpZ25lZC1vZmYtYnkudGVzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0ZXN0IGZyb20gJ2F2YSc7XG5pbXBvcnQgcGFyc2UgZnJvbSAnLi4vbGlicmFyeS9wYXJzZSc7XG5pbXBvcnQgY2hlY2sgZnJvbSAnLi9zaWduZWQtb2ZmLWJ5JztcblxuY29uc3QgbWVzc2FnZXMgPSB7XG5cdGVtcHR5OiAnY2hvcmU6XFxuJyxcblx0d2l0aDogYGNob3JlOiBzdWJqZWN0XFxuYm9keVxcbmZvb3RlclxcblNpZ25lZC1vZmYtYnk6XFxuXFxuYCxcblx0d2l0aG91dDogYGNob3JlOiBzdWJqZWN0XFxuYm9keVxcbmZvb3RlclxcblxcbmAsXG5cdGluU3ViamVjdDogYGNob3JlOiBzdWJqZWN0IFNpZ25lZC1vZmYtYnk6XFxuYm9keVxcbmZvb3RlclxcblxcbmAsXG5cdGluQm9keTogYGNob3JlOiBzdWJqZWN0XFxuYm9keSBTaWduZWQtb2ZmLWJ5OlxcbmZvb3RlclxcblxcbmBcbn07XG5cbmNvbnN0IHBhcnNlZCA9IHtcblx0ZW1wdHk6IHBhcnNlKG1lc3NhZ2VzLmVtcHR5KSxcblx0d2l0aDogcGFyc2UobWVzc2FnZXMud2l0aCksXG5cdHdpdGhvdXQ6IHBhcnNlKG1lc3NhZ2VzLndpdGhvdXQpLFxuXHRpblN1YmplY3Q6IHBhcnNlKG1lc3NhZ2VzLmluU3ViamVjdCksXG5cdGluQm9keTogcGFyc2UobWVzc2FnZXMuaW5Cb2R5KVxufTtcblxudGVzdCgnZW1wdHkgYWdhaW5zdCBcImFsd2F5cyBzaWduZWQtb2ZmLWJ5XCIgc2hvdWxkIGZhaWwnLCBhc3luYyB0ID0+IHtcblx0Y29uc3QgW2FjdHVhbF0gPSBjaGVjayhhd2FpdCBwYXJzZWQuZW1wdHksICdhbHdheXMnLCAnU2lnbmVkLW9mZi1ieTonKTtcblx0Y29uc3QgZXhwZWN0ZWQgPSBmYWxzZTtcblx0dC5pcyhhY3R1YWwsIGV4cGVjdGVkKTtcbn0pO1xuXG50ZXN0KCdlbXB0eSBhZ2FpbnN0IFwibmV2ZXIgc2lnbmVkLW9mZi1ieVwiIHNob3VsZCBzdWNjZWVkJywgYXN5bmMgdCA9PiB7XG5cdGNvbnN0IFthY3R1YWxdID0gY2hlY2soYXdhaXQgcGFyc2VkLmVtcHR5LCAnbmV2ZXInLCAnU2lnbmVkLW9mZi1ieTonKTtcblx0Y29uc3QgZXhwZWN0ZWQgPSB0cnVlO1xuXHR0LmlzKGFjdHVhbCwgZXhwZWN0ZWQpO1xufSk7XG5cbnRlc3QoJ3dpdGggYWdhaW5zdCBcImFsd2F5cyBzaWduZWQtb2ZmLWJ5XCIgc2hvdWxkIHN1Y2NlZWQnLCBhc3luYyB0ID0+IHtcblx0Y29uc3QgW2FjdHVhbF0gPSBjaGVjayhhd2FpdCBwYXJzZWQud2l0aCwgJ2Fsd2F5cycsICdTaWduZWQtb2ZmLWJ5OicpO1xuXHRjb25zdCBleHBlY3RlZCA9IHRydWU7XG5cdHQuaXMoYWN0dWFsLCBleHBlY3RlZCk7XG59KTtcblxudGVzdCgnd2l0aCBhZ2FpbnN0IFwibmV2ZXIgc2lnbmVkLW9mZi1ieVwiIHNob3VsZCBmYWlsJywgYXN5bmMgdCA9PiB7XG5cdGNvbnN0IFthY3R1YWxdID0gY2hlY2soYXdhaXQgcGFyc2VkLndpdGgsICduZXZlcicsICdTaWduZWQtb2ZmLWJ5OicpO1xuXHRjb25zdCBleHBlY3RlZCA9IGZhbHNlO1xuXHR0LmlzKGFjdHVhbCwgZXhwZWN0ZWQpO1xufSk7XG5cbnRlc3QoJ3dpdGhvdXQgYWdhaW5zdCBcImFsd2F5cyBzaWduZWQtb2ZmLWJ5XCIgc2hvdWxkIGZhaWwnLCBhc3luYyB0ID0+IHtcblx0Y29uc3QgW2FjdHVhbF0gPSBjaGVjayhhd2FpdCBwYXJzZWQud2l0aG91dCwgJ2Fsd2F5cycsICdTaWduZWQtb2ZmLWJ5OicpO1xuXHRjb25zdCBleHBlY3RlZCA9IGZhbHNlO1xuXHR0LmlzKGFjdHVhbCwgZXhwZWN0ZWQpO1xufSk7XG5cbnRlc3QoJ3dpdGhvdXQgYWdhaW5zdCBcIm5ldmVyIHNpZ25lZC1vZmYtYnlcIiBzaG91bGQgc3VjY2VlZCcsIGFzeW5jIHQgPT4ge1xuXHRjb25zdCBbYWN0dWFsXSA9IGNoZWNrKGF3YWl0IHBhcnNlZC53aXRob3V0LCAnbmV2ZXInLCAnU2lnbmVkLW9mZi1ieTonKTtcblx0Y29uc3QgZXhwZWN0ZWQgPSB0cnVlO1xuXHR0LmlzKGFjdHVhbCwgZXhwZWN0ZWQpO1xufSk7XG5cbnRlc3QoJ2luU3ViamVjdCBhZ2FpbnN0IFwiYWx3YXlzIHNpZ25lZC1vZmYtYnlcIiBzaG91bGQgZmFpbCcsIGFzeW5jIHQgPT4ge1xuXHRjb25zdCBbYWN0dWFsXSA9IGNoZWNrKGF3YWl0IHBhcnNlZC5pblN1YmplY3QsICdhbHdheXMnLCAnU2lnbmVkLW9mZi1ieTonKTtcblx0Y29uc3QgZXhwZWN0ZWQgPSBmYWxzZTtcblx0dC5pcyhhY3R1YWwsIGV4cGVjdGVkKTtcbn0pO1xuXG50ZXN0KCdpblN1YmplY3QgYWdhaW5zdCBcIm5ldmVyIHNpZ25lZC1vZmYtYnlcIiBzaG91bGQgc3VjY2VlZCcsIGFzeW5jIHQgPT4ge1xuXHRjb25zdCBbYWN0dWFsXSA9IGNoZWNrKGF3YWl0IHBhcnNlZC5pblN1YmplY3QsICduZXZlcicsICdTaWduZWQtb2ZmLWJ5OicpO1xuXHRjb25zdCBleHBlY3RlZCA9IHRydWU7XG5cdHQuaXMoYWN0dWFsLCBleHBlY3RlZCk7XG59KTtcblxudGVzdCgnaW5Cb2R5IGFnYWluc3QgXCJhbHdheXMgc2lnbmVkLW9mZi1ieVwiIHNob3VsZCBmYWlsJywgYXN5bmMgdCA9PiB7XG5cdGNvbnN0IFthY3R1YWxdID0gY2hlY2soYXdhaXQgcGFyc2VkLmluQm9keSwgJ2Fsd2F5cycsICdTaWduZWQtb2ZmLWJ5OicpO1xuXHRjb25zdCBleHBlY3RlZCA9IGZhbHNlO1xuXHR0LmlzKGFjdHVhbCwgZXhwZWN0ZWQpO1xufSk7XG5cbnRlc3QoJ2luQm9keSBhZ2FpbnN0IFwibmV2ZXIgc2lnbmVkLW9mZi1ieVwiIHNob3VsZCBzdWNjZWVkJywgYXN5bmMgdCA9PiB7XG5cdGNvbnN0IFthY3R1YWxdID0gY2hlY2soYXdhaXQgcGFyc2VkLmluQm9keSwgJ25ldmVyJywgJ1NpZ25lZC1vZmYtYnk6Jyk7XG5cdGNvbnN0IGV4cGVjdGVkID0gdHJ1ZTtcblx0dC5pcyhhY3R1YWwsIGV4cGVjdGVkKTtcbn0pO1xuIl19