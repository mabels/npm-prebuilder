'use strict';

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _parse = require('../library/parse');

var _parse2 = _interopRequireDefault(_parse);

var _footerEmpty19 = require('./footer-empty');

var _footerEmpty20 = _interopRequireDefault(_footerEmpty19);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var messages = {
	simple: 'chore: subject',
	empty: 'chore: subject\nbody',
	filled: 'chore: subject\nBREAKING CHANGE: something important'
};

var parsed = {
	simple: (0, _parse2.default)(messages.simple),
	empty: (0, _parse2.default)(messages.empty),
	filled: (0, _parse2.default)(messages.filled)
};

(0, _ava2.default)('with simple message should succeed for empty keyword', function () {
	var _ref = _asyncToGenerator(function* (t) {
		var _footerEmpty = (0, _footerEmpty20.default)((yield parsed.simple)),
		    _footerEmpty2 = _slicedToArray(_footerEmpty, 1),
		    actual = _footerEmpty2[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x) {
		return _ref.apply(this, arguments);
	};
}());

(0, _ava2.default)('with simple message should fail for "never"', function () {
	var _ref2 = _asyncToGenerator(function* (t) {
		var _footerEmpty3 = (0, _footerEmpty20.default)((yield parsed.simple), 'never'),
		    _footerEmpty4 = _slicedToArray(_footerEmpty3, 1),
		    actual = _footerEmpty4[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x2) {
		return _ref2.apply(this, arguments);
	};
}());

(0, _ava2.default)('with simple message should succeed for "always"', function () {
	var _ref3 = _asyncToGenerator(function* (t) {
		var _footerEmpty5 = (0, _footerEmpty20.default)((yield parsed.simple), 'always'),
		    _footerEmpty6 = _slicedToArray(_footerEmpty5, 1),
		    actual = _footerEmpty6[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x3) {
		return _ref3.apply(this, arguments);
	};
}());

(0, _ava2.default)('with empty footer should succeed for empty keyword', function () {
	var _ref4 = _asyncToGenerator(function* (t) {
		var _footerEmpty7 = (0, _footerEmpty20.default)((yield parsed.empty)),
		    _footerEmpty8 = _slicedToArray(_footerEmpty7, 1),
		    actual = _footerEmpty8[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x4) {
		return _ref4.apply(this, arguments);
	};
}());

(0, _ava2.default)('with empty footer should fail for "never"', function () {
	var _ref5 = _asyncToGenerator(function* (t) {
		var _footerEmpty9 = (0, _footerEmpty20.default)((yield parsed.empty), 'never'),
		    _footerEmpty10 = _slicedToArray(_footerEmpty9, 1),
		    actual = _footerEmpty10[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x5) {
		return _ref5.apply(this, arguments);
	};
}());

(0, _ava2.default)('with empty footer should succeed for "always"', function () {
	var _ref6 = _asyncToGenerator(function* (t) {
		var _footerEmpty11 = (0, _footerEmpty20.default)((yield parsed.empty), 'always'),
		    _footerEmpty12 = _slicedToArray(_footerEmpty11, 1),
		    actual = _footerEmpty12[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x6) {
		return _ref6.apply(this, arguments);
	};
}());

(0, _ava2.default)('with footer should fail for empty keyword', function () {
	var _ref7 = _asyncToGenerator(function* (t) {
		var _footerEmpty13 = (0, _footerEmpty20.default)((yield parsed.filled)),
		    _footerEmpty14 = _slicedToArray(_footerEmpty13, 1),
		    actual = _footerEmpty14[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x7) {
		return _ref7.apply(this, arguments);
	};
}());

(0, _ava2.default)('with footer should succeed for "never"', function () {
	var _ref8 = _asyncToGenerator(function* (t) {
		var _footerEmpty15 = (0, _footerEmpty20.default)((yield parsed.filled), 'never'),
		    _footerEmpty16 = _slicedToArray(_footerEmpty15, 1),
		    actual = _footerEmpty16[0];

		var expected = true;
		t.is(actual, expected);
	});

	return function (_x8) {
		return _ref8.apply(this, arguments);
	};
}());

(0, _ava2.default)('with footer should fail for "always"', function () {
	var _ref9 = _asyncToGenerator(function* (t) {
		var _footerEmpty17 = (0, _footerEmpty20.default)((yield parsed.filled), 'always'),
		    _footerEmpty18 = _slicedToArray(_footerEmpty17, 1),
		    actual = _footerEmpty18[0];

		var expected = false;
		t.is(actual, expected);
	});

	return function (_x9) {
		return _ref9.apply(this, arguments);
	};
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ydWxlcy9mb290ZXItZW1wdHkudGVzdC5qcyJdLCJuYW1lcyI6WyJtZXNzYWdlcyIsInNpbXBsZSIsImVtcHR5IiwiZmlsbGVkIiwicGFyc2VkIiwidCIsImFjdHVhbCIsImV4cGVjdGVkIiwiaXMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsV0FBVztBQUNoQkMsU0FBUSxnQkFEUTtBQUVoQkMsUUFBTyxzQkFGUztBQUdoQkMsU0FBUTtBQUhRLENBQWpCOztBQU1BLElBQU1DLFNBQVM7QUFDZEgsU0FBUSxxQkFBTUQsU0FBU0MsTUFBZixDQURNO0FBRWRDLFFBQU8scUJBQU1GLFNBQVNFLEtBQWYsQ0FGTztBQUdkQyxTQUFRLHFCQUFNSCxTQUFTRyxNQUFmO0FBSE0sQ0FBZjs7QUFNQSxtQkFBSyxzREFBTDtBQUFBLDhCQUE2RCxXQUFNRSxDQUFOLEVBQVc7QUFBQSxxQkFDdEQsNkJBQVksTUFBTUQsT0FBT0gsTUFBekIsRUFEc0Q7QUFBQTtBQUFBLE1BQ2hFSyxNQURnRTs7QUFFdkUsTUFBTUMsV0FBVyxJQUFqQjtBQUNBRixJQUFFRyxFQUFGLENBQUtGLE1BQUwsRUFBYUMsUUFBYjtBQUNBLEVBSkQ7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBTUEsbUJBQUssNkNBQUw7QUFBQSwrQkFBb0QsV0FBTUYsQ0FBTixFQUFXO0FBQUEsc0JBQzdDLDZCQUFZLE1BQU1ELE9BQU9ILE1BQXpCLEdBQWlDLE9BQWpDLENBRDZDO0FBQUE7QUFBQSxNQUN2REssTUFEdUQ7O0FBRTlELE1BQU1DLFdBQVcsS0FBakI7QUFDQUYsSUFBRUcsRUFBRixDQUFLRixNQUFMLEVBQWFDLFFBQWI7QUFDQSxFQUpEOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQU1BLG1CQUFLLGlEQUFMO0FBQUEsK0JBQXdELFdBQU1GLENBQU4sRUFBVztBQUFBLHNCQUNqRCw2QkFBWSxNQUFNRCxPQUFPSCxNQUF6QixHQUFpQyxRQUFqQyxDQURpRDtBQUFBO0FBQUEsTUFDM0RLLE1BRDJEOztBQUVsRSxNQUFNQyxXQUFXLElBQWpCO0FBQ0FGLElBQUVHLEVBQUYsQ0FBS0YsTUFBTCxFQUFhQyxRQUFiO0FBQ0EsRUFKRDs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFNQSxtQkFBSyxvREFBTDtBQUFBLCtCQUEyRCxXQUFNRixDQUFOLEVBQVc7QUFBQSxzQkFDcEQsNkJBQVksTUFBTUQsT0FBT0YsS0FBekIsRUFEb0Q7QUFBQTtBQUFBLE1BQzlESSxNQUQ4RDs7QUFFckUsTUFBTUMsV0FBVyxJQUFqQjtBQUNBRixJQUFFRyxFQUFGLENBQUtGLE1BQUwsRUFBYUMsUUFBYjtBQUNBLEVBSkQ7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBTUEsbUJBQUssMkNBQUw7QUFBQSwrQkFBa0QsV0FBTUYsQ0FBTixFQUFXO0FBQUEsc0JBQzNDLDZCQUFZLE1BQU1ELE9BQU9GLEtBQXpCLEdBQWdDLE9BQWhDLENBRDJDO0FBQUE7QUFBQSxNQUNyREksTUFEcUQ7O0FBRTVELE1BQU1DLFdBQVcsS0FBakI7QUFDQUYsSUFBRUcsRUFBRixDQUFLRixNQUFMLEVBQWFDLFFBQWI7QUFDQSxFQUpEOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQU1BLG1CQUFLLCtDQUFMO0FBQUEsK0JBQXNELFdBQU1GLENBQU4sRUFBVztBQUFBLHVCQUMvQyw2QkFBWSxNQUFNRCxPQUFPRixLQUF6QixHQUFnQyxRQUFoQyxDQUQrQztBQUFBO0FBQUEsTUFDekRJLE1BRHlEOztBQUVoRSxNQUFNQyxXQUFXLElBQWpCO0FBQ0FGLElBQUVHLEVBQUYsQ0FBS0YsTUFBTCxFQUFhQyxRQUFiO0FBQ0EsRUFKRDs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFNQSxtQkFBSywyQ0FBTDtBQUFBLCtCQUFrRCxXQUFNRixDQUFOLEVBQVc7QUFBQSx1QkFDM0MsNkJBQVksTUFBTUQsT0FBT0QsTUFBekIsRUFEMkM7QUFBQTtBQUFBLE1BQ3JERyxNQURxRDs7QUFFNUQsTUFBTUMsV0FBVyxLQUFqQjtBQUNBRixJQUFFRyxFQUFGLENBQUtGLE1BQUwsRUFBYUMsUUFBYjtBQUNBLEVBSkQ7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBTUEsbUJBQUssd0NBQUw7QUFBQSwrQkFBK0MsV0FBTUYsQ0FBTixFQUFXO0FBQUEsdUJBQ3hDLDZCQUFZLE1BQU1ELE9BQU9ELE1BQXpCLEdBQWlDLE9BQWpDLENBRHdDO0FBQUE7QUFBQSxNQUNsREcsTUFEa0Q7O0FBRXpELE1BQU1DLFdBQVcsSUFBakI7QUFDQUYsSUFBRUcsRUFBRixDQUFLRixNQUFMLEVBQWFDLFFBQWI7QUFDQSxFQUpEOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQU1BLG1CQUFLLHNDQUFMO0FBQUEsK0JBQTZDLFdBQU1GLENBQU4sRUFBVztBQUFBLHVCQUN0Qyw2QkFBWSxNQUFNRCxPQUFPRCxNQUF6QixHQUFpQyxRQUFqQyxDQURzQztBQUFBO0FBQUEsTUFDaERHLE1BRGdEOztBQUV2RCxNQUFNQyxXQUFXLEtBQWpCO0FBQ0FGLElBQUVHLEVBQUYsQ0FBS0YsTUFBTCxFQUFhQyxRQUFiO0FBQ0EsRUFKRDs7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiJmb290ZXItZW1wdHkudGVzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0ZXN0IGZyb20gJ2F2YSc7XG5pbXBvcnQgcGFyc2UgZnJvbSAnLi4vbGlicmFyeS9wYXJzZSc7XG5pbXBvcnQgZm9vdGVyRW1wdHkgZnJvbSAnLi9mb290ZXItZW1wdHknO1xuXG5jb25zdCBtZXNzYWdlcyA9IHtcblx0c2ltcGxlOiAnY2hvcmU6IHN1YmplY3QnLFxuXHRlbXB0eTogJ2Nob3JlOiBzdWJqZWN0XFxuYm9keScsXG5cdGZpbGxlZDogJ2Nob3JlOiBzdWJqZWN0XFxuQlJFQUtJTkcgQ0hBTkdFOiBzb21ldGhpbmcgaW1wb3J0YW50J1xufTtcblxuY29uc3QgcGFyc2VkID0ge1xuXHRzaW1wbGU6IHBhcnNlKG1lc3NhZ2VzLnNpbXBsZSksXG5cdGVtcHR5OiBwYXJzZShtZXNzYWdlcy5lbXB0eSksXG5cdGZpbGxlZDogcGFyc2UobWVzc2FnZXMuZmlsbGVkKVxufTtcblxudGVzdCgnd2l0aCBzaW1wbGUgbWVzc2FnZSBzaG91bGQgc3VjY2VlZCBmb3IgZW1wdHkga2V5d29yZCcsIGFzeW5jIHQgPT4ge1xuXHRjb25zdCBbYWN0dWFsXSA9IGZvb3RlckVtcHR5KGF3YWl0IHBhcnNlZC5zaW1wbGUpO1xuXHRjb25zdCBleHBlY3RlZCA9IHRydWU7XG5cdHQuaXMoYWN0dWFsLCBleHBlY3RlZCk7XG59KTtcblxudGVzdCgnd2l0aCBzaW1wbGUgbWVzc2FnZSBzaG91bGQgZmFpbCBmb3IgXCJuZXZlclwiJywgYXN5bmMgdCA9PiB7XG5cdGNvbnN0IFthY3R1YWxdID0gZm9vdGVyRW1wdHkoYXdhaXQgcGFyc2VkLnNpbXBsZSwgJ25ldmVyJyk7XG5cdGNvbnN0IGV4cGVjdGVkID0gZmFsc2U7XG5cdHQuaXMoYWN0dWFsLCBleHBlY3RlZCk7XG59KTtcblxudGVzdCgnd2l0aCBzaW1wbGUgbWVzc2FnZSBzaG91bGQgc3VjY2VlZCBmb3IgXCJhbHdheXNcIicsIGFzeW5jIHQgPT4ge1xuXHRjb25zdCBbYWN0dWFsXSA9IGZvb3RlckVtcHR5KGF3YWl0IHBhcnNlZC5zaW1wbGUsICdhbHdheXMnKTtcblx0Y29uc3QgZXhwZWN0ZWQgPSB0cnVlO1xuXHR0LmlzKGFjdHVhbCwgZXhwZWN0ZWQpO1xufSk7XG5cbnRlc3QoJ3dpdGggZW1wdHkgZm9vdGVyIHNob3VsZCBzdWNjZWVkIGZvciBlbXB0eSBrZXl3b3JkJywgYXN5bmMgdCA9PiB7XG5cdGNvbnN0IFthY3R1YWxdID0gZm9vdGVyRW1wdHkoYXdhaXQgcGFyc2VkLmVtcHR5KTtcblx0Y29uc3QgZXhwZWN0ZWQgPSB0cnVlO1xuXHR0LmlzKGFjdHVhbCwgZXhwZWN0ZWQpO1xufSk7XG5cbnRlc3QoJ3dpdGggZW1wdHkgZm9vdGVyIHNob3VsZCBmYWlsIGZvciBcIm5ldmVyXCInLCBhc3luYyB0ID0+IHtcblx0Y29uc3QgW2FjdHVhbF0gPSBmb290ZXJFbXB0eShhd2FpdCBwYXJzZWQuZW1wdHksICduZXZlcicpO1xuXHRjb25zdCBleHBlY3RlZCA9IGZhbHNlO1xuXHR0LmlzKGFjdHVhbCwgZXhwZWN0ZWQpO1xufSk7XG5cbnRlc3QoJ3dpdGggZW1wdHkgZm9vdGVyIHNob3VsZCBzdWNjZWVkIGZvciBcImFsd2F5c1wiJywgYXN5bmMgdCA9PiB7XG5cdGNvbnN0IFthY3R1YWxdID0gZm9vdGVyRW1wdHkoYXdhaXQgcGFyc2VkLmVtcHR5LCAnYWx3YXlzJyk7XG5cdGNvbnN0IGV4cGVjdGVkID0gdHJ1ZTtcblx0dC5pcyhhY3R1YWwsIGV4cGVjdGVkKTtcbn0pO1xuXG50ZXN0KCd3aXRoIGZvb3RlciBzaG91bGQgZmFpbCBmb3IgZW1wdHkga2V5d29yZCcsIGFzeW5jIHQgPT4ge1xuXHRjb25zdCBbYWN0dWFsXSA9IGZvb3RlckVtcHR5KGF3YWl0IHBhcnNlZC5maWxsZWQpO1xuXHRjb25zdCBleHBlY3RlZCA9IGZhbHNlO1xuXHR0LmlzKGFjdHVhbCwgZXhwZWN0ZWQpO1xufSk7XG5cbnRlc3QoJ3dpdGggZm9vdGVyIHNob3VsZCBzdWNjZWVkIGZvciBcIm5ldmVyXCInLCBhc3luYyB0ID0+IHtcblx0Y29uc3QgW2FjdHVhbF0gPSBmb290ZXJFbXB0eShhd2FpdCBwYXJzZWQuZmlsbGVkLCAnbmV2ZXInKTtcblx0Y29uc3QgZXhwZWN0ZWQgPSB0cnVlO1xuXHR0LmlzKGFjdHVhbCwgZXhwZWN0ZWQpO1xufSk7XG5cbnRlc3QoJ3dpdGggZm9vdGVyIHNob3VsZCBmYWlsIGZvciBcImFsd2F5c1wiJywgYXN5bmMgdCA9PiB7XG5cdGNvbnN0IFthY3R1YWxdID0gZm9vdGVyRW1wdHkoYXdhaXQgcGFyc2VkLmZpbGxlZCwgJ2Fsd2F5cycpO1xuXHRjb25zdCBleHBlY3RlZCA9IGZhbHNlO1xuXHR0LmlzKGFjdHVhbCwgZXhwZWN0ZWQpO1xufSk7XG4iXX0=