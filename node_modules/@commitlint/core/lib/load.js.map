{"version":3,"sources":["../src/load.js"],"names":["w","a","b","Array","isArray","undefined","valid","input","seed","raw","file","config","opts","extends","rules","extended","prefix","cwd","dirname","process","preset","executed","all","map","key","item","value","executedValue","entry","reduce","registry","legacy","legacyFound","found","resolveable","console","warn","relative","id","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,IAAI,SAAJA,CAAI,CAACC,CAAD,EAAIC,CAAJ;AAAA,QAAWC,MAAMC,OAAN,CAAcF,CAAd,IAAmBA,CAAnB,GAAuBG,SAAlC;AAAA,CAAV;AACA,IAAMC,QAAQ,SAARA,KAAQ;AAAA,QAAS,kBAAKC,KAAL,EAAY,SAAZ,EAAuB,OAAvB,CAAT;AAAA,CAAd;;;4CAEe,aAAqB;AAAA,MAAdC,IAAc,uEAAP,EAAO;;AACnC;AACA,MAAMC,MAAMC,MAAZ;;AAEA;AACA,MAAMC,SAASL,MAAM,mBAAMG,GAAN,EAAWD,IAAX,CAAN,CAAf;AACA,MAAMI,OAAO,mBAAM,EAACC,SAAS,EAAV,EAAcC,OAAO,EAArB,EAAN,EAAgC,kBAAKH,MAAL,EAAa,SAAb,CAAhC,CAAb;;AAEA;AACA,MAAMI,WAAW,8BAAeH,IAAf,EAAqB;AACrCI,WAAQ,mBAD6B;AAErCC,QAAKR,IAAIE,MAAJ,GAAa,eAAKO,OAAL,CAAaT,IAAIE,MAAjB,CAAb,GAAwCQ,QAAQF,GAAR;AAFR,GAArB,CAAjB;;AAKA,MAAMG,SAASd,MAAM,uBAAU,EAAV,EAAcS,QAAd,EAAwBJ,MAAxB,EAAgCX,CAAhC,CAAN,CAAf;;AAEA;AACA,MAAMqB,WAAW,MAAM,kBAAQC,GAAR,CACtB,CAAC,OAAD,EACEC,GADF,CACM,eAAO;AACX,UAAO,CAACC,GAAD,EAAMJ,OAAOI,GAAP,CAAN,CAAP;AACA,GAHF,EAIED,GAJF;AAAA,+CAIM,WAAME,IAAN,EAAc;AAAA,6CACGA,IADH;AAAA,QACXD,GADW;AAAA,QACNE,KADM;;AAElB,QAAMC,gBAAgB,MAAM,kBAAQL,GAAR,CAC3B,qBAAQI,SAAS,EAAjB,EAAqBH,GAArB,CAAyB;AAAA,YAAS,2BAAYK,KAAZ,CAAT;AAAA,KAAzB,CAD2B,CAA5B;AAGA,WAAO,CACNJ,GADM,EAENG,cAAcE,MAAd,CAAqB,UAACC,QAAD,EAAWL,IAAX,EAAoB;AAAA,+CACnBA,IADmB;AAAA,SACjCD,GADiC;AAAA,SAC5BE,KAD4B;;AAExC,uCACII,QADJ;AAEC,OAACN,GAAD,GAAOE;AAFR;AAIA,KAND,EAMG,EANH,CAFM,CAAP;AAUA,IAnBF;;AAAA;AAAA;AAAA;AAAA,MADsB,CAAvB;;AAuBA;AACA,SAAOL,SAASQ,MAAT,CAAgB,UAACC,QAAD,EAAWL,IAAX,EAAoB;AAAA,6CACrBA,IADqB;AAAA,OACnCD,GADmC;AAAA,OAC9BE,KAD8B;;AAE1C,qCACII,QADJ;AAEC,KAACN,GAAD,GAAOE;AAFR;AAIA,GANM,EAMJN,MANI,CAAP;AAOA,E;;;;;;;AAED,SAASV,IAAT,GAAgB;AACf,KAAMqB,SAAS,kBAAG,6BAAH,CAAf;AACA,KAAMC,cAAc,OAAOD,OAAOpB,MAAd,KAAyB,QAA7C;;AAEA,KAAMsB,QAAQC,YAAY,qBAAZ,CAAd;AACA,KAAMzB,MAAMwB,QAAQ,0BAAWd,QAAQF,GAAR,EAAX,EAA0B,qBAA1B,CAAR,GAA2D,EAAvE;;AAEA,KAAIe,eAAe,CAACC,KAApB,EAA2B;AAC1BE,UAAQC,IAAR,CACE,gBAAe,eAAKC,QAAL,CACflB,QAAQF,GAAR,EADe,EAEfc,OAAOpB,MAFQ,CAGd,2DAJH;AAMA;;AAED,KAAIqB,eAAeC,KAAnB,EAA0B;AACzBE,UAAQC,IAAR,CACE,kBAAiB,eAAKC,QAAL,CACjBlB,QAAQF,GAAR,EADiB,EAEjBc,OAAOpB,MAFU,CAGhB,wGAJH;AAMA;;AAED,KAAIsB,KAAJ,EAAW;AACV,SAAOxB,GAAP;AACA;;AAED,QAAOsB,MAAP;AACA;;AAED,SAASG,WAAT,CAAqBI,EAArB,EAAyB;AACxB,KAAI;AACH,6BAAYnB,QAAQF,GAAR,EAAZ,EAA2BqB,EAA3B;AACA,SAAO,IAAP;AACA,EAHD,CAGE,OAAOC,GAAP,EAAY;AACb,SAAO,KAAP;AACA;AACD","file":"load.js","sourcesContent":["import path from 'path';\nimport importFrom from 'import-from';\nimport {entries, merge, mergeWith, pick} from 'lodash';\nimport rc from 'rc';\nimport resolveFrom from 'resolve-from';\n\nimport resolveExtends from './library/resolve-extends';\nimport executeRule from './library/execute-rule';\n\nconst w = (a, b) => (Array.isArray(b) ? b : undefined);\nconst valid = input => pick(input, 'extends', 'rules');\n\nexport default async (seed = {}) => {\n\t// Obtain config from .rc files\n\tconst raw = file();\n\n\t// Merge passed config with file based options\n\tconst config = valid(merge(raw, seed));\n\tconst opts = merge({extends: [], rules: {}}, pick(config, 'extends'));\n\n\t// Resolve extends key\n\tconst extended = resolveExtends(opts, {\n\t\tprefix: 'commitlint-config',\n\t\tcwd: raw.config ? path.dirname(raw.config) : process.cwd()\n\t});\n\n\tconst preset = valid(mergeWith({}, extended, config, w));\n\n\t// Execute rule config functions if needed\n\tconst executed = await Promise.all(\n\t\t['rules']\n\t\t\t.map(key => {\n\t\t\t\treturn [key, preset[key]];\n\t\t\t})\n\t\t\t.map(async item => {\n\t\t\t\tconst [key, value] = item;\n\t\t\t\tconst executedValue = await Promise.all(\n\t\t\t\t\tentries(value || {}).map(entry => executeRule(entry))\n\t\t\t\t);\n\t\t\t\treturn [\n\t\t\t\t\tkey,\n\t\t\t\t\texecutedValue.reduce((registry, item) => {\n\t\t\t\t\t\tconst [key, value] = item;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...registry,\n\t\t\t\t\t\t\t[key]: value\n\t\t\t\t\t\t};\n\t\t\t\t\t}, {})\n\t\t\t\t];\n\t\t\t})\n\t);\n\n\t// Merge executed config keys into preset\n\treturn executed.reduce((registry, item) => {\n\t\tconst [key, value] = item;\n\t\treturn {\n\t\t\t...registry,\n\t\t\t[key]: value\n\t\t};\n\t}, preset);\n};\n\nfunction file() {\n\tconst legacy = rc('conventional-changelog-lint');\n\tconst legacyFound = typeof legacy.config === 'string';\n\n\tconst found = resolveable('./commitlint.config');\n\tconst raw = found ? importFrom(process.cwd(), './commitlint.config') : {};\n\n\tif (legacyFound && !found) {\n\t\tconsole.warn(\n\t\t\t`Using legacy ${path.relative(\n\t\t\t\tprocess.cwd(),\n\t\t\t\tlegacy.config\n\t\t\t)}. Rename to commitlint.config.js to silence this warning.`\n\t\t);\n\t}\n\n\tif (legacyFound && found) {\n\t\tconsole.warn(\n\t\t\t`Ignored legacy ${path.relative(\n\t\t\t\tprocess.cwd(),\n\t\t\t\tlegacy.config\n\t\t\t)} as commitlint.config.js superseeds it. Remove .conventional-changelog-lintrc to silence this warning.`\n\t\t);\n\t}\n\n\tif (found) {\n\t\treturn raw;\n\t}\n\n\treturn legacy;\n}\n\nfunction resolveable(id) {\n\ttry {\n\t\tresolveFrom(process.cwd(), id);\n\t\treturn true;\n\t} catch (err) {\n\t\treturn false;\n\t}\n}\n"]}