{"version":3,"sources":["../../src/library/ensure-language.js"],"names":["input","allowed","detected","all","filter","lang","map","slice","matches","indexOf"],"mappings":";;;;;;AAAA;;;;;;kBAEe,UAACA,KAAD,EAAQC,OAAR,EAAoB;AAClC,KAAMC,WAAW,gBACfC,GADe,CACXH,KADW,EAEfI,MAFe,CAER;AAAA,SAAQC,KAAK,CAAL,KAAW,IAAnB;AAAA,EAFQ,EAGfC,GAHe,CAGX;AAAA,SAAQD,KAAK,CAAL,CAAR;AAAA,EAHW,EAIfE,KAJe,CAIT,CAJS,EAIN,CAJM,CAAjB;;AAMA;AACA;AACA,KAAMC,UAAUN,SAAS,CAAT,MAAgB,KAAhB,IAAyBA,SAASO,OAAT,CAAiBR,OAAjB,IAA4B,CAAC,CAAtE;;AAEA,QAAO;AACNO,SADM;AAENN;AAFM,EAAP;AAIA,C","file":"ensure-language.js","sourcesContent":["import franc from 'franc';\n\nexport default (input, allowed) => {\n\tconst detected = franc\n\t\t.all(input)\n\t\t.filter(lang => lang[1] >= 0.45)\n\t\t.map(lang => lang[0])\n\t\t.slice(0, 5);\n\n\t// Library franc spits out ['und'] when unable to\n\t// guess any languages, let it through in this case\n\tconst matches = detected[0] === 'und' || detected.indexOf(allowed) > -1;\n\n\treturn {\n\t\tmatches,\n\t\tdetected\n\t};\n};\n"]}