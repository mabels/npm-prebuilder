'use strict';

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _executeRule = require('./execute-rule');

var _executeRule2 = _interopRequireDefault(_executeRule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

(0, _ava2.default)('does nothing without params', function () {
	var _ref = _asyncToGenerator(function* (t) {
		var actual = yield (0, _executeRule2.default)();
		t.is(actual, null);
	});

	return function (_x) {
		return _ref.apply(this, arguments);
	};
}());

(0, _ava2.default)('returns plain config', function () {
	var _ref2 = _asyncToGenerator(function* (t) {
		var actual = yield (0, _executeRule2.default)(['name', 'config']);
		t.deepEqual(actual, ['name', 'config']);
	});

	return function (_x2) {
		return _ref2.apply(this, arguments);
	};
}());

(0, _ava2.default)('unwraps promised config', function () {
	var _ref3 = _asyncToGenerator(function* (t) {
		var actual = yield (0, _executeRule2.default)(['name', Promise.resolve('config')]);
		t.deepEqual(actual, ['name', 'config']);
	});

	return function (_x3) {
		return _ref3.apply(this, arguments);
	};
}());

(0, _ava2.default)('executes config functions', function () {
	var _ref4 = _asyncToGenerator(function* (t) {
		var actual = yield (0, _executeRule2.default)(['name', function () {
			return 'config';
		}]);
		t.deepEqual(actual, ['name', 'config']);
	});

	return function (_x4) {
		return _ref4.apply(this, arguments);
	};
}());

(0, _ava2.default)('executes async config functions', function () {
	var _ref5 = _asyncToGenerator(function* (t) {
		var actual = yield (0, _executeRule2.default)(['name', _asyncToGenerator(function* () {
			return 'config';
		})]);
		t.deepEqual(actual, ['name', 'config']);
	});

	return function (_x5) {
		return _ref5.apply(this, arguments);
	};
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWJyYXJ5L2V4ZWN1dGUtcnVsZS50ZXN0LmpzIl0sIm5hbWVzIjpbInQiLCJhY3R1YWwiLCJpcyIsImRlZXBFcXVhbCIsIlByb21pc2UiLCJyZXNvbHZlIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7Ozs7O0FBRUEsbUJBQUssNkJBQUw7QUFBQSw4QkFBb0MsV0FBTUEsQ0FBTixFQUFXO0FBQzlDLE1BQU1DLFNBQVMsTUFBTSw0QkFBckI7QUFDQUQsSUFBRUUsRUFBRixDQUFLRCxNQUFMLEVBQWEsSUFBYjtBQUNBLEVBSEQ7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBS0EsbUJBQUssc0JBQUw7QUFBQSwrQkFBNkIsV0FBTUQsQ0FBTixFQUFXO0FBQ3ZDLE1BQU1DLFNBQVMsTUFBTSwyQkFBUSxDQUFDLE1BQUQsRUFBUyxRQUFULENBQVIsQ0FBckI7QUFDQUQsSUFBRUcsU0FBRixDQUFZRixNQUFaLEVBQW9CLENBQUMsTUFBRCxFQUFTLFFBQVQsQ0FBcEI7QUFDQSxFQUhEOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUtBLG1CQUFLLHlCQUFMO0FBQUEsK0JBQWdDLFdBQU1ELENBQU4sRUFBVztBQUMxQyxNQUFNQyxTQUFTLE1BQU0sMkJBQVEsQ0FBQyxNQUFELEVBQVNHLFFBQVFDLE9BQVIsQ0FBZ0IsUUFBaEIsQ0FBVCxDQUFSLENBQXJCO0FBQ0FMLElBQUVHLFNBQUYsQ0FBWUYsTUFBWixFQUFvQixDQUFDLE1BQUQsRUFBUyxRQUFULENBQXBCO0FBQ0EsRUFIRDs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFLQSxtQkFBSywyQkFBTDtBQUFBLCtCQUFrQyxXQUFNRCxDQUFOLEVBQVc7QUFDNUMsTUFBTUMsU0FBUyxNQUFNLDJCQUFRLENBQUMsTUFBRCxFQUFTO0FBQUEsVUFBTSxRQUFOO0FBQUEsR0FBVCxDQUFSLENBQXJCO0FBQ0FELElBQUVHLFNBQUYsQ0FBWUYsTUFBWixFQUFvQixDQUFDLE1BQUQsRUFBUyxRQUFULENBQXBCO0FBQ0EsRUFIRDs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFLQSxtQkFBSyxpQ0FBTDtBQUFBLCtCQUF3QyxXQUFNRCxDQUFOLEVBQVc7QUFDbEQsTUFBTUMsU0FBUyxNQUFNLDJCQUFRLENBQUMsTUFBRCxvQkFBUztBQUFBLFVBQVksUUFBWjtBQUFBLEdBQVQsRUFBUixDQUFyQjtBQUNBRCxJQUFFRyxTQUFGLENBQVlGLE1BQVosRUFBb0IsQ0FBQyxNQUFELEVBQVMsUUFBVCxDQUFwQjtBQUNBLEVBSEQ7O0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiZXhlY3V0ZS1ydWxlLnRlc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdGVzdCBmcm9tICdhdmEnO1xuaW1wb3J0IGV4ZWN1dGUgZnJvbSAnLi9leGVjdXRlLXJ1bGUnO1xuXG50ZXN0KCdkb2VzIG5vdGhpbmcgd2l0aG91dCBwYXJhbXMnLCBhc3luYyB0ID0+IHtcblx0Y29uc3QgYWN0dWFsID0gYXdhaXQgZXhlY3V0ZSgpO1xuXHR0LmlzKGFjdHVhbCwgbnVsbCk7XG59KTtcblxudGVzdCgncmV0dXJucyBwbGFpbiBjb25maWcnLCBhc3luYyB0ID0+IHtcblx0Y29uc3QgYWN0dWFsID0gYXdhaXQgZXhlY3V0ZShbJ25hbWUnLCAnY29uZmlnJ10pO1xuXHR0LmRlZXBFcXVhbChhY3R1YWwsIFsnbmFtZScsICdjb25maWcnXSk7XG59KTtcblxudGVzdCgndW53cmFwcyBwcm9taXNlZCBjb25maWcnLCBhc3luYyB0ID0+IHtcblx0Y29uc3QgYWN0dWFsID0gYXdhaXQgZXhlY3V0ZShbJ25hbWUnLCBQcm9taXNlLnJlc29sdmUoJ2NvbmZpZycpXSk7XG5cdHQuZGVlcEVxdWFsKGFjdHVhbCwgWyduYW1lJywgJ2NvbmZpZyddKTtcbn0pO1xuXG50ZXN0KCdleGVjdXRlcyBjb25maWcgZnVuY3Rpb25zJywgYXN5bmMgdCA9PiB7XG5cdGNvbnN0IGFjdHVhbCA9IGF3YWl0IGV4ZWN1dGUoWyduYW1lJywgKCkgPT4gJ2NvbmZpZyddKTtcblx0dC5kZWVwRXF1YWwoYWN0dWFsLCBbJ25hbWUnLCAnY29uZmlnJ10pO1xufSk7XG5cbnRlc3QoJ2V4ZWN1dGVzIGFzeW5jIGNvbmZpZyBmdW5jdGlvbnMnLCBhc3luYyB0ID0+IHtcblx0Y29uc3QgYWN0dWFsID0gYXdhaXQgZXhlY3V0ZShbJ25hbWUnLCBhc3luYyAoKSA9PiAnY29uZmlnJ10pO1xuXHR0LmRlZXBFcXVhbChhY3R1YWwsIFsnbmFtZScsICdjb25maWcnXSk7XG59KTtcbiJdfQ==