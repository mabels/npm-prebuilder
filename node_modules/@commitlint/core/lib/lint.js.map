{"version":3,"sources":["../src/lint.js"],"names":["message","rules","valid","errors","warnings","parsed","results","filter","entry","level","map","name","config","when","value","rule","Boolean","result","length"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;;4CAEe,WAAOA,OAAP,EAA+B;AAAA,MAAfC,KAAe,uEAAP,EAAO;;AAC7C;AACA,MAAI,yBAAUD,OAAV,CAAJ,EAAwB;AACvB,UAAO;AACNE,WAAO,IADD;AAENC,YAAQ,EAFF;AAGNC,cAAU;AAHJ,IAAP;AAKA;;AAED;AACA,MAAMC,SAAS,MAAM,qBAAML,OAAN,CAArB;;AAEA;AACA,MAAMM,UAAU,qBAAQL,KAAR,EACdM,MADc,CACP,iBAAS;AAAA,6CACIC,KADJ;AAAA;AAAA,OACNC,KADM;;AAEhB,UAAOA,QAAQ,CAAf;AACA,GAJc,EAKdC,GALc,CAKV,iBAAS;AAAA,8CACUF,KADV;AAAA,OACNG,IADM;AAAA,OACAC,MADA;;AAAA,8CAEgBA,MAFhB;AAAA,OAENH,KAFM;AAAA,OAECI,IAFD;AAAA,OAEOC,KAFP;;AAIb;;;AACA,OAAIL,UAAU,CAAd,EAAiB;AAChB,WAAO,IAAP;AACA;;AAED,OAAMM,OAAO,gBAAgBJ,IAAhB,CAAb;;AATa,eAUYI,KAAKV,MAAL,EAAaQ,IAAb,EAAmBC,KAAnB,CAVZ;AAAA;AAAA,OAUNZ,KAVM;AAAA,OAUCF,OAVD;;AAYb,UAAO;AACNS,SADM;AAENP,SAFM;AAGNS,QAHM;AAINX;AAJM,IAAP;AAMA,GAvBc,EAwBdO,MAxBc,CAwBPS,OAxBO,CAAhB;;AA0BA,MAAMb,SAASG,QAAQC,MAAR,CAAe;AAAA,UAAUU,OAAOR,KAAP,GAAe,CAAf,IAAoB,CAACQ,OAAOf,KAAtC;AAAA,GAAf,CAAf;;AAEA,MAAME,WAAWE,QAAQC,MAAR,CAAe;AAAA,UAAUU,OAAOR,KAAP,GAAe,CAAf,IAAoB,CAACQ,OAAOf,KAAtC;AAAA,GAAf,CAAjB;;AAEA,MAAMA,QAAQC,OAAOe,MAAP,KAAkB,CAAhC;;AAEA,SAAO;AACNhB,QADM;AAENC,SAFM;AAGNC;AAHM,GAAP;AAKA,E","file":"lint.js","sourcesContent":["import {entries} from 'lodash';\nimport isIgnored from './library/is-ignored';\nimport parse from './library/parse';\nimport implementations from './rules';\n\nexport default async (message, rules = {}) => {\n\t// Found a wildcard match, skip\n\tif (isIgnored(message)) {\n\t\treturn {\n\t\t\tvalid: true,\n\t\t\terrors: [],\n\t\t\twarnings: []\n\t\t};\n\t}\n\n\t// Parse the commit message\n\tconst parsed = await parse(message);\n\n\t// Validate against all rules\n\tconst results = entries(rules)\n\t\t.filter(entry => {\n\t\t\tconst [, [level]] = entry;\n\t\t\treturn level > 0;\n\t\t})\n\t\t.map(entry => {\n\t\t\tconst [name, config] = entry;\n\t\t\tconst [level, when, value] = config;\n\n\t\t\t// Level 0 rules are ignored\n\t\t\tif (level === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst rule = implementations[name];\n\t\t\tconst [valid, message] = rule(parsed, when, value);\n\n\t\t\treturn {\n\t\t\t\tlevel,\n\t\t\t\tvalid,\n\t\t\t\tname,\n\t\t\t\tmessage\n\t\t\t};\n\t\t})\n\t\t.filter(Boolean);\n\n\tconst errors = results.filter(result => result.level > 1 && !result.valid);\n\n\tconst warnings = results.filter(result => result.level < 2 && !result.valid);\n\n\tconst valid = errors.length === 0;\n\n\treturn {\n\t\tvalid,\n\t\terrors,\n\t\twarnings\n\t};\n};\n"]}